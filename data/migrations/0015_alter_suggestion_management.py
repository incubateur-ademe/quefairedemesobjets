# Generated by Django 5.2.5 on 2025-10-03 07:35

import django.contrib.postgres.fields
import django.db.models.deletion
import django.db.models.functions.datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("data", "0014_alter_suggestioncohorte_type_action"),
        ("qfdmo", "0176_merge_20250924_1802"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="suggestion",
            options={
                "verbose_name": "2️⃣ Suggestion - Bientôt déprécié",
                "verbose_name_plural": "2️⃣ Suggestions - Bientôt déprécié",
            },
        ),
        migrations.AlterModelOptions(
            name="suggestioncohorte",
            options={
                "verbose_name": "1️⃣ Suggestion Cohorte",
                "verbose_name_plural": "1️⃣ Suggestions Cohortes",
            },
        ),
        migrations.AlterField(
            model_name="suggestion",
            name="suggestion_cohorte",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="suggestions",
                to="data.suggestioncohorte",
            ),
        ),
        migrations.CreateModel(
            name="SuggestionGroupe",
            fields=[
                (
                    "cree_le",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                (
                    "modifie_le",
                    models.DateTimeField(
                        auto_now=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("AVALIDER", "À valider"),
                            ("REJETEE", "Rejetée"),
                            ("ATRAITER", "À traiter"),
                            ("ENCOURS", "En cours de traitement"),
                            ("ERREUR", "Fini en erreur"),
                            ("SUCCES", "Fini avec succès"),
                        ],
                        default="AVALIDER",
                        max_length=50,
                    ),
                ),
                (
                    "contexte",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Données initiales"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        null=True,
                        verbose_name="Metadata de la cohorte, données statistiques",
                    ),
                ),
                (
                    "acteur",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggestion_groupes",
                        to="qfdmo.acteur",
                    ),
                ),
                (
                    "revision_acteur",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggestion_groupes",
                        to="qfdmo.revisionacteur",
                    ),
                ),
                (
                    "suggestion_cohorte",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggestion_groupes",
                        to="data.suggestioncohorte",
                    ),
                ),
            ],
            options={
                "verbose_name": "2️⃣ ⏳ ⚠️ Suggestion Groupe - Livraison prochainement",
                "verbose_name_plural": "2️⃣ ⏳ ⚠️ Suggestions Groupes - Livraison prochainement",
            },
        ),
        migrations.CreateModel(
            name="SuggestionUnitaire",
            fields=[
                (
                    "cree_le",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                (
                    "modifie_le",
                    models.DateTimeField(
                        auto_now=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("AVALIDER", "À valider"),
                            ("REJETEE", "Rejetée"),
                            ("ATRAITER", "À traiter"),
                            ("ENCOURS", "En cours de traitement"),
                            ("ERREUR", "Fini en erreur"),
                            ("SUCCES", "Fini avec succès"),
                        ],
                        default="AVALIDER",
                        max_length=50,
                    ),
                ),
                ("ordre", models.IntegerField(blank=True, default=1)),
                ("raison", models.TextField(blank=True, db_default="", default="")),
                ("parametres", models.JSONField(blank=True, db_default="", default="")),
                (
                    "suggestion_modele",
                    models.CharField(
                        blank=True,
                        choices=[],
                        db_default="",
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "champs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "valeurs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "acteur",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggestion_unitaires",
                        to="qfdmo.acteur",
                    ),
                ),
                (
                    "revision_acteur",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggestion_unitaires",
                        to="qfdmo.revisionacteur",
                    ),
                ),
                (
                    "suggestion_groupe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggestion_unitaires",
                        to="data.suggestiongroupe",
                    ),
                ),
            ],
            options={
                "verbose_name": "3️⃣ ⏳ ⚠️ Suggestion Unitaire - Livraison prochainement",
                "verbose_name_plural": "3️⃣ ⏳ ⚠️ Suggestions Unitaires - Livraison prochainement",
            },
        ),
        migrations.CreateModel(
            name="SuggestionLog",
            fields=[
                (
                    "cree_le",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                (
                    "modifie_le",
                    models.DateTimeField(
                        auto_now=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "identifiant_unique",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                (
                    "niveau_de_log",
                    models.CharField(
                        choices=[("WARNING", "Warning"), ("ERROR", "Error")],
                        default="WARNING",
                        max_length=50,
                    ),
                ),
                ("fonction_de_transformation", models.CharField(max_length=255)),
                (
                    "origine_colonnes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "origine_valeurs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), null=True, size=None
                    ),
                ),
                (
                    "destination_colonnes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        null=True,
                        size=None,
                    ),
                ),
                ("message", models.TextField(blank=True, db_default="", default="")),
                (
                    "suggestion_cohorte",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggestion_logs",
                        to="data.suggestioncohorte",
                    ),
                ),
                (
                    "suggestion_groupe",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggestion_logs",
                        to="data.suggestiongroupe",
                    ),
                ),
                (
                    "suggestion_unitaire",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggestion_logs",
                        to="data.suggestionunitaire",
                    ),
                ),
            ],
            options={
                "verbose_name": "📝 Suggestion Log",
            },
        ),
    ]
