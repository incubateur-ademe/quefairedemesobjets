[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.test_settings"
env_files = [".env.template"]
addopts = "--reuse-db --ignore=scripts"
filterwarnings = [
  # Because of django-ninja package, cf. https://github.com/vitalik/django-ninja/issues/1266
  "ignore::pydantic.warnings.PydanticDeprecatedSince20",
  "ignore::django.utils.deprecation.RemovedInDjango60Warning",
]

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "*/migrations/*",
  "*.ipynb",
]

# Same as Black.
line-length = 88

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "Ë†(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.mypy]
exclude = ["migrations/"]
ignore_missing_imports = true
warn_return_any = false

[project]
name = "quefairedemesobjets"
version = "1.57.0"
description = ""
license = "MIT"
readme = "README.md"
requires-python = ">=3.12,<3.13"

[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12,<3.13"
api-insee = "^1.6"
boto3 = "<1.36"
dj-database-url = "^2.3.0"
django = "<=5.1.8" # cf. https://github.com/django/django/issues/16589
django-extensions = "^4.1"
django-import-export = {extras = ["xls", "xlsx"], version = "^4.3.3"}
django-ninja = "^1.4.1"
django-sql-explorer = "^5.3"
django-storages = "^1.14.6"
gunicorn = "^23.0.0"
jinja2 = "^3.1.5"
opening-hours-py = "^1.1.3"
orjson = "^3.10.18"
pillow = "^11.2.1"
psycopg2 = "^2.9.10"
python-decouple = "^3.8"
requests = "^2.32.3"
sentry-sdk = "^2.29.1"
shortuuid = "^1.0.13"
tqdm = "^4.67.1"
unidecode = "^1.4.0"
uvicorn = "^0.34.2"
whitenoise = "^6.8.2"
django-widget-tweaks = "^1.5.0"
django-cors-headers = "^4.6.0"
django-dsfr = "^2.0.0"
django-colorfield = "^0.14.0"
rapidfuzz = "^3.13.0"
sites-faciles-experiment = "^0.0.10"
diff-match-patch = "^20241021"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
django-browser-reload = "^1.17.0"
django-debug-toolbar = "^5.1.0"
django-stubs = "^5.1.1"
factory-boy = "^3.3.1"
honcho = "^2.0.0"
pre-commit = "^4.2.0"
ptpython = "^3.0.30"
beautifulsoup4 = "^4.13.4"
pytest = "^8.3.4"
pytest-django = "^4.9.0"
pytest-dotenv = "^0.5.2"
pytest-mock = "^3.14.0"
ruff = "^0.11.11"
shapely = "^2.1.1" # notebook

[tool.poetry.group.docs.dependencies]
myst-parser = "^4.0.0"
sphinx = "^8.1.3" # docs
furo = "^2024.8.6" # docs theme
detect-secrets = "^1.5.0"
sphinxcontrib-mermaid = "^1.0.0"


[tool.poetry.group.airflow.dependencies]
apache-airflow-providers-postgres = "^6.1.1"
fuzzywuzzy = "^0.18.0"
pyproj = "^3.7.0"
python-decouple = "^3.8"
ratelimit = "^2.2.1"
shortuuid = "^1.0.13"
unidecode = "^1.4.0"
scikit-learn = "1.3.2"
apache-airflow = "^2.10.4"
pandas = "<2.2"
dbt-core = "^1.9.3"
dbt-postgres = "^1.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
