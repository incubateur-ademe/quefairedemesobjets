---
x-airflow-common:
  &airflow-common
  environment:
    &airflow-common-env
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db/airflow
    AIRFLOW__CORE__DAGS_FOLDER: '/opt/airflow/dags'
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__ENABLE_XCOM_PICKLING: 'true'
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    AIRFLOW__WEBSERVER__WORKERS: '2'
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    # Uncomment the next 4 lines to store logs in S3
    # AIRFLOW__LOGGING__REMOTE_LOGGING: 'true'
    # AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER: "s3://qfdmo-airflow-logs"
    # AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID: 's3logs'
    # AIRFLOW__LOGGING__ENCRYPT_S3_LOGS: "false"
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    # WARNING: Use _PIP_ADDITIONAL_REQUIREMENTS option ONLY for a quick checks
    # for other purpose (development, test and especially production usage) build/extend Airflow image.
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
  volumes:
    - ./logs:/opt/airflow/logs
    - ./dags:/opt/airflow/dags
    - ./config:/opt/airflow/config
    - ./plugins:/opt/airflow/plugins
  # Only for Linux
  # user: "${AIRFLOW_UID:-50000}:0"
  extra_hosts:
    - "host.docker.internal:host-gateway"
  depends_on:
    &airflow-common-depends-on
    airflow-db:
      condition: service_healthy

services:
  lvao-db:
    image: postgis/postgis:15-3.3-alpine
    environment:
      - POSTGRES_USER=qfdmo
      - POSTGRES_PASSWORD=qfdmo
      - POSTGRES_DB=qfdmo
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis
    volumes:
      - ./pgdata:/var/lib/postgresql/data:delegated
    ports:
      - 6543:5432
    profiles: [lvao, airflow]
  airflow-db:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./airflow-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    profiles: [airflow]

  airflow-webserver:
    <<: *airflow-common

    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
      _PIP_ADDITIONAL_REQUIREMENTS: ''
    user: "0:0"
    build:
      context: .
      dockerfile: airflow-webserver.Dockerfile
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      <<: *airflow-common-depends-on
    profiles: [airflow]

  airflow-scheduler:
    <<: *airflow-common
    build:
      context: .
      dockerfile: airflow-scheduler.Dockerfile
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      <<: *airflow-common-depends-on
      airflow-webserver:
        condition: service_healthy
    profiles: [airflow]
