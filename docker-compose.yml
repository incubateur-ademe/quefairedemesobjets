---
x-airflow-common:
  &airflow-common
  env_file:
    - ./dags/.env
  volumes:
    - ./logs:/opt/airflow/logs
    - ./dags:/opt/airflow/dags
    - ./config:/opt/airflow/config
    - ./plugins:/opt/airflow/plugins
  # Voir la doc et s'assurer que AIRFLOW_UID est
  # définit dans le .env pour correspondre à votre UID
  # sed -i '/^AIRFLOW_UID=/d' .env && echo "AIRFLOW_UID=$(id -u)" >> .env
  user: "${AIRFLOW_UID:-50000}:0"
  extra_hosts:
    - "host.docker.internal:host-gateway"
  depends_on:
    &airflow-common-depends-on
    airflow-db:
      condition: service_healthy

services:
  lvao-db:
    image: postgis/postgis:15-3.3-alpine
    environment:
      - POSTGRES_USER=qfdmo
      - POSTGRES_PASSWORD=qfdmo # pragma: allowlist secret
      - POSTGRES_DB=qfdmo
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis
    volumes:
      - ./pgdata:/var/lib/postgresql/data:delegated
    expose:
      - 5432
    ports:
      - 6543:5432
    profiles: [lvao, airflow]
  airflow-db:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./airflow-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    profiles: [airflow]

  airflow-webserver:
    <<: *airflow-common

    environment:
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
      _PIP_ADDITIONAL_REQUIREMENTS: ''
    user: "0:0"
    build:
      context: .
      dockerfile: airflow-webserver.Dockerfile
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      <<: *airflow-common-depends-on
    profiles: [airflow]

  airflow-scheduler:
    <<: *airflow-common
    env_file:
    - ./dags/.env
    build:
      context: .
      dockerfile: airflow-scheduler.Dockerfile
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      <<: *airflow-common-depends-on
      airflow-webserver:
        condition: service_healthy
    profiles: [airflow]
