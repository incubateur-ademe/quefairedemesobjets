# Generated by Django 5.2.4 on 2025-08-06 10:02

import os

from django.conf import settings
from django.db import migrations

from core.utils import (
    create_schema_warehouse_public_in_webapp_db,
    create_schema_webapp_public_in_warehouse_db,
)


def create_remote_schemas(apps, schema_editor):

    # Skip during tests
    if os.environ.get("PYTEST_CURRENT_TEST") is None:
        create_schema_webapp_public_in_warehouse_db()
        create_schema_warehouse_public_in_webapp_db()


class Migration(migrations.Migration):

    dependencies = [
        ("qfdmo", "0163_remove_displayedacteurtemp_acteur_services_and_more"),
    ]

    db_port = (
        5432
        if settings.ENVIRONMENT == "development"
        else settings.DATABASES["default"]["PORT"]
    )

    operations = [
        migrations.RunSQL(
            """
            DROP SERVER IF EXISTS qfdmo_server CASCADE;
            """,
            f"""
            CREATE EXTENSION IF NOT EXISTS postgis;
            CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
            CREATE EXTENSION IF NOT EXISTS unaccent;
            CREATE EXTENSION IF NOT EXISTS pg_trgm;
            CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
            CREATE EXTENSION IF NOT EXISTS postgres_fdw;
            DROP SERVER IF EXISTS qfdmo_server CASCADE;
            CREATE EXTENSION IF NOT EXISTS postgres_fdw;
            CREATE SERVER qfdmo_server FOREIGN DATA WRAPPER postgres_fdw
              OPTIONS (
                host '{settings.DATABASES['default']['HOST']}',
                port '{db_port}',
                dbname '{settings.DATABASES['default']['NAME']}'
              );
            CREATE USER MAPPING FOR CURRENT_USER SERVER qfdmo_server
              OPTIONS (
                user '{settings.DATABASES['default']['USER']}',
                password '{settings.DATABASES['default']['PASSWORD']}'
              );
            CREATE SCHEMA IF NOT EXISTS webapp_public;
            IMPORT FOREIGN SCHEMA public FROM SERVER qfdmo_server INTO webapp_public;
            """,
        ),
        migrations.RunPython(
            create_remote_schemas,
            migrations.RunPython.noop,
        ),
    ]
