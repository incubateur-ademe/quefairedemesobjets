# Generated by Django 5.1.8 on 2025-05-07 09:04

from django.db import migrations

PUBLIC_TABLES_TO_DROP = [
    "exposure_carte_acteur",
    "exposure_carte_acteur_acteur_services",
    "exposure_carte_acteur_labels",
    "exposure_carte_acteur_sources",
    "exposure_carte_propositionservice",
    "exposure_carte_propositionservice_sous_categories",
    "exposure_exhaustive_acteur",
    "exposure_exhaustive_acteur_acteur_services",
    "exposure_exhaustive_acteur_labels",
    "exposure_exhaustive_acteur_sources",
    "exposure_exhaustive_propositionservice",
    "exposure_exhaustive_propositionservice_sous_categories",
    "exposure_opendata_acteur",
    "int_acteur",
    "int_acteur_acteur_services",
    "int_acteur_labels",
    "int_ae_etablissement",
    "int_ae_unite_legale",
    "int_ban_adresses",
    "int_ban_villes",
    "int_propositionservice",
    "int_propositionservice_sous_categories",
    "marts_carte_acteur",
    "marts_carte_acteur_acteur_services",
    "marts_carte_acteur_labels",
    "marts_carte_acteur_sources",
    "marts_carte_propositionservice",
    "marts_carte_propositionservice_sous_categories",
    "marts_exhaustive_acteur",
    "marts_exhaustive_acteur_acteur_services",
    "marts_exhaustive_acteur_labels",
    "marts_exhaustive_propositionservice",
    "marts_exhaustive_propositionservice_sous_categories",
    "marts_opendata_acteur",
    "marts_opendata_acteur_acteur_services",
    "marts_opendata_acteur_labels",
    "marts_opendata_acteur_sources",
    "marts_opendata_propositionservice",
    "marts_opendata_propositionservice_sous_categories",
]

PUBLIC_VIEWS_TO_DROP = [
    "base_acteur",
    "base_acteur_acteur_services",
    "base_acteur_labels",
    "base_acteur_type",
    "base_ae_etablissement",
    "base_ae_unite_legale",
    "base_ban_adresses",
    "base_propositionservice",
    "base_propositionservice_sous_categories",
    "base_revisionacteur",
    "base_revisionacteur_acteur_services",
    "base_revisionacteur_labels",
    "base_revisionpropositionservice",
    "base_revisionpropositionservice_sous_categories",
    "base_source",
    "clone_ae_etablissement_in_use",
    "clone_ae_unite_legale_in_use",
    "clone_ban_adresses_in_use",
    "clone_ban_lieux_dits_in_use",
    "marts_exhaustive_acteur_sources",
]

PUBLIC_FUNCTIONS_TO_DROP = [
    "encode_base57",
    "safe_divmod",
    "udf_ae_string_cleanup",
    "udf_columns_concat_unique_non_empty",
    "udf_columns_words_in_common_count",
    "udf_normalize_string_for_match",
    "uuid_to_int",
]


class Migration(migrations.Migration):

    dependencies = [
        ("qfdmo", "0151_acteur_acteur_unique_by_source_and_external_id"),
    ]

    operations = (
        [
            migrations.RunSQL(
                """CREATE SCHEMA IF NOT EXISTS warehouse""",
                """DROP SCHEMA IF EXISTS warehouse CASCADE""",
            ),
        ]
        + [
            migrations.RunSQL(
                f"""DROP TABLE IF EXISTS public.{table} CASCADE""",
                f"""DROP TABLE IF EXISTS warehouse.{table} CASCADE""",
            )
            for table in PUBLIC_TABLES_TO_DROP
        ]
        + [
            migrations.RunSQL(
                f"""DROP VIEW IF EXISTS public.{view} CASCADE""",
                f"""DROP VIEW IF EXISTS warehouse.{view} CASCADE""",
            )
            for view in PUBLIC_VIEWS_TO_DROP
        ]
        + [
            migrations.RunSQL(
                f"""DROP FUNCTION IF EXISTS public.{function} CASCADE""",
                f"""DROP FUNCTION IF EXISTS warehouse.{function} CASCADE""",
            )
            for function in PUBLIC_FUNCTIONS_TO_DROP
        ]
    )
