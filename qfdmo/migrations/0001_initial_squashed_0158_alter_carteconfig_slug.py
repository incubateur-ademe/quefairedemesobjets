# Generated by Django 5.1.8 on 2025-06-19 16:09

import colorfield.fields
import django.contrib.gis.db.models.fields
import django.contrib.postgres.operations
import django.db.migrations.operations.special
import django.db.models.deletion
import django.db.models.functions.datetime
import django.utils.timezone
import shortuuid.main
from django.db import migrations, models

import core.validators
import qfdmo.models.acteur
import qfdmo.validators


class Migration(migrations.Migration):
    initial = True

    replaces = [
        ("qfdmo", "0001_initial"),
        ("qfdmo", "0002_lvaobase"),
        ("qfdmo", "0003_rename_entiteservice_acteurservice_and_more"),
        ("qfdmo", "0004_acteurservice_actions"),
        ("qfdmo", "0005_reemploiacteur_propositionservice_and_more"),
        ("qfdmo", "0006_rename_reemploiacteur_economiecirculaireacteur_and_more"),
        ("qfdmo", "0007_rename_economiecirculaireacteur_acteur_and_more"),
        ("qfdmo", "0008_actiondirection_action_nom_affiche_action_order_and_more"),
        ("qfdmo", "0009_actiondirection_order"),
        ("qfdmo", "0010_action_description"),
        ("qfdmo", "0011_revisionacteur_revisionpropositionservice_and_more"),
        ("qfdmo", "0012_create_materialized_view_20230915_0918"),
        ("qfdmo", "0013_update_verbose_name"),
        ("qfdmo", "0014_create_objet"),
        ("qfdmo", "0015_finalacteur_finalpropositionservice_and_more"),
        ("qfdmo", "0016_action_couleur_and_more"),
        ("qfdmo", "0017_finalacteur_finalpropositionservice"),
        ("qfdmo", "0018_set_default_acteur_values"),
        ("qfdmo", "0019_source_and_more"),
        ("qfdmo", "0020_set_acteur_source"),
        ("qfdmo", "0021_remove_acteur_source_donnee_and_more"),
        ("qfdmo", "0022_acteur_cree_le_acteur_modifie_le_and_more"),
        ("qfdmo", "0023_alter_acteur_identifiant_unique_and_more"),
        ("qfdmo", "0024_alter_correctionacteur_correction_statut"),
        ("qfdmo", "0025_alter_propositionservice_acteur_and_more"),
        ("qfdmo", "0026_remove_acteur_id_remove_revisionacteur_id_and_more"),
        ("qfdmo", "0027_alter_correctionacteur_final_acteur_and_more"),
        ("qfdmo", "0028_finalpropositionservice_views"),
        ("qfdmo", "0029_alter_revisionacteur_nom"),
        ("qfdmo", "0030_create_location_index"),
        ("qfdmo", "0031_create_finalpropositionservice_id_index"),
        ("qfdmo", "0032_create_indexes_on_views"),
        ("qfdmo", "0033_acteurservice_nom_affiche"),
        ("qfdmo", "0034_directions_actions_related_name"),
        ("qfdmo", "0035_alter_action_icon_and_more"),
        ("qfdmo", "0036_acteur_horaires"),
        ("qfdmo", "0037_remove_duplicates_proposition_service"),
        ("qfdmo", "0038_unicity_constraints_proposition_service"),
        ("qfdmo", "0039_acteur_description_correctionacteur_description_and_more"),
        ("qfdmo", "0040_displayedacteur_alter_finalacteur_options_and_more"),
        ("qfdmo", "0041_correctionequipeacteur_alter_revisionacteur_options_and_more"),
        ("qfdmo", "0042_displayedacteurtemp_and_more"),
        ("qfdmo", "0043_source_logo_file"),
        ("qfdmo", "0044_alter_metaoptions"),
        ("qfdmo", "0045_action_afficher"),
        ("qfdmo", "0046_acteurtype_and_source_code_import_and_more"),
        (
            "qfdmo",
            "0047_remove_correctionequipepropositionservice_rps_unique_by_correctionequipeacteur_action_service_and_mo",
        ),
        ("qfdmo", "0048_alter_correctionacteur_final_acteur_and_more"),
        ("qfdmo", "0049_remove_final_table"),
        ("qfdmo", "0050_remove_correction_equipe"),
        ("qfdmo", "0051_remove_useless_models_and_fields"),
        ("qfdmo", "0052_dagrun"),
        ("qfdmo", "0053_rename_horaires_acteur_horaires_osm_and_more"),
        ("qfdmo", "0054_manage_horaires_osm_vs_desc"),
        ("qfdmo", "0055_labelqualite"),
        ("qfdmo", "0056_assign_reparacteur_label"),
        ("qfdmo", "0057_remove_acteur_label_reparacteur"),
        ("qfdmo", "0058_rename_nom_to_libelle"),
        ("qfdmo", "0059_refactor_source"),
        ("qfdmo", "0060_source_code"),
        ("qfdmo", "0061_remove_lvoa_id"),
        ("qfdmo", "0062_rename_nom_acteurservice_code_and_more"),
        ("qfdmo", "0063_rename_nom_to_code_for_direction_and_action"),
        ("qfdmo", "0064_alter_souscategorieobjet_options_and_more"),
        ("qfdmo", "0065_update_sscat_objet_code"),
        ("qfdmo", "0066_alter_code_unique"),
        ("qfdmo", "0067_categorieobjet_code_and_dagrun"),
        ("qfdmo", "0068_labelqualite_type_enseigne"),
        ("qfdmo", "0069_assign_ess"),
        ("qfdmo", "0070_actiongroup"),
        ("qfdmo", "0071_objet_afficher"),
        ("qfdmo", "0072_objet_set_afficher_false"),
        ("qfdmo", "0073_alter_action_and_groupeaction"),
        ("qfdmo", "0074_souscategorieobjet_qfdmd_afficher_carte_and_more"),
        ("qfdmo", "0075_souscategorieobjet_qfdmd_produits_and_more"),
        (
            "qfdmo",
            "0076_rename_qfdmd_afficher_carte_souscategorieobjet_afficher_carte_and_more",
        ),
        ("qfdmo", "0077_remove_souscategorieobjet_url_carte_and_more"),
        ("qfdmo", "0074_alter_dagrun_status_and_more"),
        (
            "qfdmo",
            "0075_remove_displayedpropositionservicetemp_sous_categories_and_more",
        ),
        ("qfdmo", "0076_displayedpropositionservicetempsouscategorie_and_more"),
        ("qfdmo", "0078_merge_20240708_1556"),
        ("qfdmo", "0079_alter_souscategorieobjet_qfdmd_produits"),
        ("qfdmo", "0077_acteur_exclusivite_de_reprisereparation_and_more"),
        ("qfdmo", "0080_merge_20240710_1444"),
        ("qfdmo", "0081_alter_acteur_exclusivite_de_reprisereparation_and_more"),
        ("qfdmo", "0082_alter_acteur_exclusivite_de_reprisereparation_and_more"),
        ("qfdmo", "0083_alter_acteur_exclusivite_de_reprisereparation_and_more"),
        ("qfdmo", "0084_acteur_acteur_services"),
        ("qfdmo", "0085_alter_acteur_acteur_services_and_more"),
        ("qfdmo", "0086_remove_duplicated_ps"),
        (
            "qfdmo",
            "0087_remove_propositionservice_ps_unique_by_acteur_action_service_and_more",
        ),
        ("qfdmo", "0088_alter_acteurservice_options"),
        ("qfdmo", "0089_objet_identifiant_qfdmod"),
        ("qfdmo", "0090_alter_source_libelle"),
        ("qfdmo", "0090_acteur_action_principale_and_more"),
        ("qfdmo", "0091_merge_20240822_1558"),
        ("qfdmo", "0089_revisionacteur_parent_and_is_parent"),
        ("qfdmo", "0092_merge_20240827_2215"),
        ("qfdmo", "0093_displayedacteur_sources"),
        ("qfdmo", "0094_dagrunchange_status"),
        ("qfdmo", "0095_alter_acteurtype_code"),
        ("qfdmo", "0096_alter_acteurservice_code"),
        ("qfdmo", "0097_displayedacteur_uuid_displayedacteurtemp_uuid"),
        ("qfdmo", "0098_alter_action_couleur_alter_groupeaction_couleur"),
        ("qfdmo", "0099_groupeaction_couleur_claire_alter_action_couleur_and_more"),
        ("qfdmo", "0099_cma_source_update"),
        ("qfdmo", "0100_merge_20241107_1937"),
        ("qfdmo", "0100_cma_source_code"),
        ("qfdmo", "0101_merge_0100_cma_source_code_0100_merge_20241107_1937"),
        ("qfdmo", "0102_alter_action_couleur_alter_groupeaction_couleur_and_more"),
        ("qfdmo", "0103_acteur_siren_displayedacteur_siren_and_more"),
        ("qfdmo", "0104_recode_ordredespharmaciens"),
        ("qfdmo", "0105_bancache"),
        ("qfdmo", "0106_source_licence"),
        ("qfdmo", "0107_alter_source_licence"),
        ("qfdmo", "0108_remove_lvaobaserevision_lvao_base_and_more"),
        ("qfdmo", "0109_refacto_source_codes"),
        ("qfdmo", "0110_alter_source_code"),
        ("qfdmo", "0111_delete_bancache"),
        ("qfdmo", "0112_correction_source_codes_lvao"),
        ("qfdmo", "0113_delete_parents_without_children"),
        ("qfdmo", "0114_action_models_code"),
        ("qfdmo", "0115_acteur_models_code_constraint"),
        ("qfdmo", "0116_change_screlec_to_batribox"),
        ("qfdmo", "0117_update_empty_url"),
        ("qfdmo", "0118_vueacteur"),
        ("qfdmo", "0119_vueacteur_views"),
        ("qfdmo", "0120_alter_revisionacteur_parent"),
        ("qfdmo", "0121_alter_action_models_and_code_fields"),
        ("qfdmo", "0122_alter_revisionacteur_email"),
        ("qfdmo", "0123_revisionacteurparent_alter_revisionacteur_parent"),
        ("qfdmo", "0124_remove_dagrunchange_dag_run_delete_dagrun_and_more"),
        ("qfdmo", "0125_extension_uuid_ossp"),
        ("qfdmo", "0126_vueacteur_views_uuid"),
        ("qfdmo", "0127_add_indexes"),
        ("qfdmo", "0128_alter_acteur_not_nullable_char_fields_adresse"),
        ("qfdmo", "0129_alter_acteur_not_nullable_char_fields_adresse_complement"),
        ("qfdmo", "0130_alter_acteur_not_nullable_char_fields_code_postal"),
        ("qfdmo", "0131_alter_acteur_not_nullable_char_fields_commentaires"),
        ("qfdmo", "0132_alter_acteur_not_nullable_char_fields_description"),
        ("qfdmo", "0133_alter_acteur_not_nullable_char_fields_email"),
        ("qfdmo", "0134_alter_acteur_not_nullable_char_fields_horaires"),
        ("qfdmo", "0135_alter_acteur_not_nullable_char_fields_identifiant_naf"),
        ("qfdmo", "0136_alter_acteur_not_nullable_char_fields_noms"),
        ("qfdmo", "0137_alter_acteur_not_nullable_char_fields_public_reprise"),
        ("qfdmo", "0138_alter_acteur_not_nullable_char_fields_siren_siret"),
        ("qfdmo", "0139_alter_acteur_not_nullable_char_fields_tel_url_ville"),
        ("qfdmo", "0140_drop_views"),
        ("qfdmo", "0140_carteconfig_groupeactionconfig"),
        ("qfdmo", "0141_groupeactionconfig_couleur"),
        ("qfdmo", "0142_alter_groupeactionconfig_unique_together"),
        ("qfdmo", "0143_remove_groupeactionconfig_couleur"),
        ("qfdmo", "0144_alter_groupeactionconfig_groupe_action"),
        ("qfdmo", "0145_merge_20250411_1423"),
        ("qfdmo", "0146_alter_groupeactionconfig_carte_config"),
        ("qfdmo", "0147_groupeaction_fill_alter_action_couleur_and_more"),
        ("qfdmo", "0148_carteconfig_hide_legend"),
        ("qfdmo", "0149_alter_carteconfig_hide_legend"),
        ("qfdmo", "0150_acteur_siret_is_closed_and_more"),
        ("qfdmo", "0151_acteur_acteur_unique_by_source_and_external_id"),
        ("qfdmo", "0152_schema_warehouse"),
        ("qfdmo", "0153_carteconfig_no_branding_carteconfig_preview_content_and_more"),
        ("qfdmo", "0153_alter_vueacteur_options"),
        ("qfdmo", "0154_merge_20250604_1615"),
        ("qfdmo", "0155_remove_explorer_tables"),
        ("qfdmo", "0155_alter_carteconfig_slug"),
        ("qfdmo", "0156_merge_20250605_1531"),
        ("qfdmo", "0157_alter_displayedpropositionservice_id"),
        ("qfdmo", "0158_alter_carteconfig_slug"),
    ]
    dependencies = [
        ("qfdmd", "0001_initial_squashed_0036_delete_cmspage_alter_produit_id"),
    ]

    operations = [
        migrations.RunSQL("CREATE EXTENSION IF NOT EXISTS postgis;"),
        migrations.RunSQL("CREATE EXTENSION IF NOT EXISTS pg_stat_statements;"),
        migrations.RunSQL("CREATE EXTENSION IF NOT EXISTS unaccent;"),
        migrations.RunSQL("CREATE EXTENSION IF NOT EXISTS pg_trgm;"),
        migrations.RunSQL('CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'),
        migrations.RunSQL("CREATE EXTENSION IF NOT EXISTS postgres_fdw;"),
        migrations.CreateModel(
            name="VueActeur",
            fields=[
                (
                    "cree_le",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                (
                    "modifie_le",
                    models.DateTimeField(
                        auto_now=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                ("nom", models.CharField(db_index=True, max_length=255)),
                (
                    "description",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "identifiant_unique",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "adresse",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "adresse_complement",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "code_postal",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=10,
                    ),
                ),
                (
                    "ville",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=2048
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, db_default="", default="", max_length=254
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "nom_commercial",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "nom_officiel",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "siren",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=9,
                    ),
                ),
                (
                    "siret",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=14,
                    ),
                ),
                (
                    "siret_is_closed",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Indique si le SIRET est fermé ou non dans l'Annuaire Entreprises",
                        null=True,
                        verbose_name="SIRET fermé",
                    ),
                ),
                (
                    "identifiant_externe",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("ACTIF", "actif"),
                            ("INACTIF", "inactif"),
                            ("SUPPRIME", "supprimé"),
                        ],
                        db_default="ACTIF",
                        default="ACTIF",
                        max_length=255,
                    ),
                ),
                (
                    "naf_principal",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "commentaires",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "horaires_osm",
                    models.CharField(
                        blank=True,
                        db_default="",
                        default="",
                        validators=[qfdmo.models.acteur.validate_opening_hours],
                    ),
                ),
                (
                    "horaires_description",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "public_accueilli",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Particuliers et professionnels",
                                "Particuliers et professionnels",
                            ),
                            ("Professionnels", "Professionnels"),
                            ("Particuliers", "Particuliers"),
                            ("Aucun", "Aucun"),
                            ("", ""),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "reprise",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1 pour 0", "1 pour 0"),
                            ("1 pour 1", "1 pour 1"),
                            ("", ""),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "exclusivite_de_reprisereparation",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Exclusivité de reprise/réparation",
                    ),
                ),
                ("uniquement_sur_rdv", models.BooleanField(blank=True, null=True)),
                (
                    "uuid",
                    models.CharField(
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=255,
                    ),
                ),
            ],
            options={
                "verbose_name": "ACTEUR de l'EC - Vue sur l'acteur",
                "verbose_name_plural": "ACTEURS de l'EC - Vues sur tous les acteurs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VuePropositionService",
            fields=[
                ("id", models.CharField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "Vue sur la proposition de service",
                "verbose_name_plural": "Vue sur toutes les propositions de service",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ActeurService",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "code",
                    models.CharField(
                        help_text="Ce champ est utilisé lors de l'import de données, il ne doit pas être mis à jour sous peine de casser l'import de données",
                        max_length=255,
                        unique=True,
                        validators=[qfdmo.validators.CodeValidator()],
                    ),
                ),
                ("libelle", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Service proposé",
                "verbose_name_plural": "Services proposés",
                "ordering": ["libelle"],
            },
        ),
        migrations.CreateModel(
            name="Action",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "code",
                    models.CharField(
                        help_text="Ce champ est utilisé lors de l'import de données, il ne doit pas être mis à jour sous peine de casser l'import de données",
                        max_length=255,
                        unique=True,
                        validators=[qfdmo.validators.CodeValidator()],
                    ),
                ),
                ("libelle", models.CharField(default="", max_length=255)),
                (
                    "libelle_groupe",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Libellé de l'action dans le groupe",
                        max_length=255,
                    ),
                ),
                ("afficher", models.BooleanField(default=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("order", models.IntegerField(default=0)),
                (
                    "couleur",
                    colorfield.fields.ColorField(
                        blank=True,
                        choices=[
                            ("#FFF", "grey-1000-50"),
                            ("#F6F6F6", "grey-1000-50-hover"),
                            ("#EDEDED", "grey-1000-50-active"),
                            ("#F6F6F6", "grey-975-75"),
                            ("#DFDFDF", "grey-975-75-hover"),
                            ("#CFCFCF", "grey-975-75-active"),
                            ("#EEE", "grey-950-100"),
                            ("#D2D2D2", "grey-950-100-hover"),
                            ("#C1C1C1", "grey-950-100-active"),
                            ("#3A3A3A", "grey-200-850"),
                            ("#616161", "grey-200-850-hover"),
                            ("#777", "grey-200-850-active"),
                            ("#E5E5E5", "grey-925-125"),
                            ("#FFF", "grey-1000-75"),
                            ("#F6F6F6", "grey-1000-75-hover"),
                            ("#EDEDED", "grey-1000-75-active"),
                            ("#FFF", "grey-1000-100"),
                            ("#F6F6F6", "grey-1000-100-hover"),
                            ("#EDEDED", "grey-1000-100-active"),
                            ("#F6F6F6", "grey-975-100"),
                            ("#DFDFDF", "grey-975-100-hover"),
                            ("#CFCFCF", "grey-975-100-active"),
                            ("#F6F6F6", "grey-975-125"),
                            ("#DFDFDF", "grey-975-125-hover"),
                            ("#CFCFCF", "grey-975-125-active"),
                            ("#EEE", "grey-950-125"),
                            ("#D2D2D2", "grey-950-125-hover"),
                            ("#C1C1C1", "grey-950-125-active"),
                            ("#EEE", "grey-950-150"),
                            ("#D2D2D2", "grey-950-150-hover"),
                            ("#C1C1C1", "grey-950-150-active"),
                            ("#161616", "grey-50-1000"),
                            ("#666", "grey-425-625"),
                            ("#929292", "grey-625-425"),
                            ("#000", "grey-0-1000"),
                            ("#DDD", "grey-900-175"),
                            ("#F5F5FE", "blue-france-975-75"),
                            ("#DCDCFC", "blue-france-975-75-hover"),
                            ("#CBCBFA", "blue-france-975-75-active"),
                            ("#ECECFE", "blue-france-950-100"),
                            ("#CECEFC", "blue-france-950-100-hover"),
                            ("#BBBBFC", "blue-france-950-100-active"),
                            ("#000091", "blue-france-sun-113-625"),
                            ("#1212FF", "blue-france-sun-113-625-hover"),
                            ("#2323FF", "blue-france-sun-113-625-active"),
                            ("#E3E3FD", "blue-france-925-125"),
                            ("#C1C1FB", "blue-france-925-125-hover"),
                            ("#ADADF9", "blue-france-925-125-active"),
                            ("#F5F5FE", "blue-france-975-sun-113"),
                            ("#6A6AF4", "blue-france-main-525"),
                            ("#CACAFB", "blue-france-850-200"),
                            ("#FEF4F4", "red-marianne-975-75"),
                            ("#FCD7D7", "red-marianne-975-75-hover"),
                            ("#FAC4C4", "red-marianne-975-75-active"),
                            ("#FEE9E9", "red-marianne-950-100"),
                            ("#FDC5C5", "red-marianne-950-100-hover"),
                            ("#FCAFAF", "red-marianne-950-100-active"),
                            ("#C9191E", "red-marianne-425-625"),
                            ("#F93F42", "red-marianne-425-625-hover"),
                            ("#F95A5C", "red-marianne-425-625-active"),
                            ("#FDDEDE", "red-marianne-925-125"),
                            ("#FBB6B6", "red-marianne-925-125-hover"),
                            ("#FA9E9E", "red-marianne-925-125-active"),
                            ("#E1000F", "red-marianne-main-472"),
                            ("#FCBFBF", "red-marianne-850-200"),
                            ("#E8EDFF", "info-950-100"),
                            ("#C2D1FF", "info-950-100-hover"),
                            ("#A9BFFF", "info-950-100-active"),
                            ("#0063CB", "info-425-625"),
                            ("#3B87FF", "info-425-625-hover"),
                            ("#6798FF", "info-425-625-active"),
                            ("#F4F6FF", "info-975-75"),
                            ("#B8FEC9", "success-950-100"),
                            ("#46FD89", "success-950-100-hover"),
                            ("#34EB7B", "success-950-100-active"),
                            ("#18753C", "success-425-625"),
                            ("#27A959", "success-425-625-hover"),
                            ("#2FC368", "success-425-625-active"),
                            ("#DFFEE6", "success-975-75"),
                            ("#FFE9E6", "warning-950-100"),
                            ("#FFC6BD", "warning-950-100-hover"),
                            ("#FFB0A2", "warning-950-100-active"),
                            ("#B34000", "warning-425-625"),
                            ("#FF6218", "warning-425-625-hover"),
                            ("#FF7A55", "warning-425-625-active"),
                            ("#FFF4F3", "warning-975-75"),
                            ("#FFE9E9", "error-950-100"),
                            ("#FFC5C5", "error-950-100-hover"),
                            ("#FFAFAF", "error-950-100-active"),
                            ("#CE0500", "error-425-625"),
                            ("#FF2725", "error-425-625-hover"),
                            ("#FF4140", "error-425-625-active"),
                            ("#FFF4F4", "error-975-75"),
                            ("#FEF7DA", "green-tilleul-verveine-975-75"),
                            ("#FCE552", "green-tilleul-verveine-975-75-hover"),
                            ("#EBD54C", "green-tilleul-verveine-975-75-active"),
                            ("#FCEEAC", "green-tilleul-verveine-950-100"),
                            ("#E8D45C", "green-tilleul-verveine-950-100-hover"),
                            ("#D4C254", "green-tilleul-verveine-950-100-active"),
                            ("#66673D", "green-tilleul-verveine-sun-418-moon-817"),
                            (
                                "#929359",
                                "green-tilleul-verveine-sun-418-moon-817-hover",
                            ),
                            (
                                "#A7A967",
                                "green-tilleul-verveine-sun-418-moon-817-active",
                            ),
                            ("#FBE769", "green-tilleul-verveine-925-125"),
                            ("#D7C655", "green-tilleul-verveine-925-125-hover"),
                            ("#C2B24C", "green-tilleul-verveine-925-125-active"),
                            ("#B7A73F", "green-tilleul-verveine-main-707"),
                            ("#E2CF58", "green-tilleul-verveine-850-200"),
                            ("#E6FEDA", "green-bourgeon-975-75"),
                            ("#A7FC62", "green-bourgeon-975-75-hover"),
                            ("#98ED4D", "green-bourgeon-975-75-active"),
                            ("#C9FCAC", "green-bourgeon-950-100"),
                            ("#9AE95D", "green-bourgeon-950-100-hover"),
                            ("#8DD555", "green-bourgeon-950-100-active"),
                            ("#447049", "green-bourgeon-sun-425-moon-759"),
                            ("#639F6A", "green-bourgeon-sun-425-moon-759-hover"),
                            ("#72B77A", "green-bourgeon-sun-425-moon-759-active"),
                            ("#A9FB68", "green-bourgeon-925-125"),
                            ("#8ED654", "green-bourgeon-925-125-hover"),
                            ("#7FC04B", "green-bourgeon-925-125-active"),
                            ("#68A532", "green-bourgeon-main-640"),
                            ("#95E257", "green-bourgeon-850-200"),
                            ("#E3FDEB", "green-emeraude-975-75"),
                            ("#94F9B9", "green-emeraude-975-75-hover"),
                            ("#6DF1A3", "green-emeraude-975-75-active"),
                            ("#C3FAD5", "green-emeraude-950-100"),
                            ("#77EDA5", "green-emeraude-950-100-hover"),
                            ("#6DD897", "green-emeraude-950-100-active"),
                            ("#297254", "green-emeraude-sun-425-moon-753"),
                            ("#3EA47A", "green-emeraude-sun-425-moon-753-hover"),
                            ("#49BC8D", "green-emeraude-sun-425-moon-753-active"),
                            ("#9EF9BE", "green-emeraude-925-125"),
                            ("#69DF97", "green-emeraude-925-125-hover"),
                            ("#5EC988", "green-emeraude-925-125-active"),
                            ("#00A95F", "green-emeraude-main-632"),
                            ("#6FE49D", "green-emeraude-850-200"),
                            ("#DFFDF7", "green-menthe-975-75"),
                            ("#84F9E7", "green-menthe-975-75-hover"),
                            ("#70EBD8", "green-menthe-975-75-active"),
                            ("#BAFAEE", "green-menthe-950-100"),
                            ("#79E7D5", "green-menthe-950-100-hover"),
                            ("#6FD3C3", "green-menthe-950-100-active"),
                            ("#37635F", "green-menthe-sun-373-moon-652"),
                            ("#53918C", "green-menthe-sun-373-moon-652-hover"),
                            ("#62A9A2", "green-menthe-sun-373-moon-652-active"),
                            ("#8BF8E7", "green-menthe-925-125"),
                            ("#6ED5C5", "green-menthe-925-125-hover"),
                            ("#62BFB1", "green-menthe-925-125-active"),
                            ("#009081", "green-menthe-main-548"),
                            ("#73E0CF", "green-menthe-850-200"),
                            ("#E5FBFD", "green-archipel-975-75"),
                            ("#99F2F8", "green-archipel-975-75-hover"),
                            ("#73E9F0", "green-archipel-975-75-active"),
                            ("#C7F6FC", "green-archipel-950-100"),
                            ("#64ECF8", "green-archipel-950-100-hover"),
                            ("#5BD8E3", "green-archipel-950-100-active"),
                            ("#006A6F", "green-archipel-sun-391-moon-716"),
                            ("#009FA7", "green-archipel-sun-391-moon-716-hover"),
                            ("#00BBC3", "green-archipel-sun-391-moon-716-active"),
                            ("#A6F2FA", "green-archipel-925-125"),
                            ("#62DBE5", "green-archipel-925-125-hover"),
                            ("#58C5CF", "green-archipel-925-125-active"),
                            ("#009099", "green-archipel-main-557"),
                            ("#60E0EB", "green-archipel-850-200"),
                            ("#F4F6FE", "blue-ecume-975-75"),
                            ("#D7DFFB", "blue-ecume-975-75-hover"),
                            ("#C3CFFA", "blue-ecume-975-75-active"),
                            ("#E9EDFE", "blue-ecume-950-100"),
                            ("#C5D0FC", "blue-ecume-950-100-hover"),
                            ("#ADBFFC", "blue-ecume-950-100-active"),
                            ("#2F4077", "blue-ecume-sun-247-moon-675"),
                            ("#4E68BB", "blue-ecume-sun-247-moon-675-hover"),
                            ("#667DCF", "blue-ecume-sun-247-moon-675-active"),
                            ("#DEE5FD", "blue-ecume-925-125"),
                            ("#B4C5FB", "blue-ecume-925-125-hover"),
                            ("#99B3F9", "blue-ecume-925-125-active"),
                            ("#465F9D", "blue-ecume-main-400"),
                            ("#BFCCFB", "blue-ecume-850-200"),
                            ("#F3F6FE", "blue-cumulus-975-75"),
                            ("#D3DFFC", "blue-cumulus-975-75-hover"),
                            ("#BED0FA", "blue-cumulus-975-75-active"),
                            ("#E6EEFE", "blue-cumulus-950-100"),
                            ("#BCD3FC", "blue-cumulus-950-100-hover"),
                            ("#9FC3FC", "blue-cumulus-950-100-active"),
                            ("#3558A2", "blue-cumulus-sun-368-moon-732"),
                            ("#5982E0", "blue-cumulus-sun-368-moon-732-hover"),
                            ("#7996E6", "blue-cumulus-sun-368-moon-732-active"),
                            ("#DAE6FD", "blue-cumulus-925-125"),
                            ("#A9C8FB", "blue-cumulus-925-125-hover"),
                            ("#8AB8F9", "blue-cumulus-925-125-active"),
                            ("#417DC4", "blue-cumulus-main-526"),
                            ("#B6CFFB", "blue-cumulus-850-200"),
                            ("#FEF3FD", "purple-glycine-975-75"),
                            ("#FCD4F8", "purple-glycine-975-75-hover"),
                            ("#FABFF5", "purple-glycine-975-75-active"),
                            ("#FEE7FC", "purple-glycine-950-100"),
                            ("#FDC0F8", "purple-glycine-950-100-hover"),
                            ("#FCA8F6", "purple-glycine-950-100-active"),
                            ("#6E445A", "purple-glycine-sun-319-moon-630"),
                            ("#A66989", "purple-glycine-sun-319-moon-630-hover"),
                            ("#BB7F9E", "purple-glycine-sun-319-moon-630-active"),
                            ("#FDDBFA", "purple-glycine-925-125"),
                            ("#FBAFF5", "purple-glycine-925-125-hover"),
                            ("#FA96F2", "purple-glycine-925-125-active"),
                            ("#A558A0", "purple-glycine-main-494"),
                            ("#FBB8F6", "purple-glycine-850-200"),
                            ("#FEF4F2", "pink-macaron-975-75"),
                            ("#FCD8D0", "pink-macaron-975-75-hover"),
                            ("#FAC5B8", "pink-macaron-975-75-active"),
                            ("#FEE9E6", "pink-macaron-950-100"),
                            ("#FDC6BD", "pink-macaron-950-100-hover"),
                            ("#FCB0A2", "pink-macaron-950-100-active"),
                            ("#8D533E", "pink-macaron-sun-406-moon-833"),
                            ("#CA795C", "pink-macaron-sun-406-moon-833-hover"),
                            ("#E08E73", "pink-macaron-sun-406-moon-833-active"),
                            ("#FDDFDA", "pink-macaron-925-125"),
                            ("#FBB8AB", "pink-macaron-925-125-hover"),
                            ("#FAA18D", "pink-macaron-925-125-active"),
                            ("#E18B76", "pink-macaron-main-689"),
                            ("#FCC0B4", "pink-macaron-850-200"),
                            ("#FEF4F3", "pink-tuile-975-75"),
                            ("#FCD7D3", "pink-tuile-975-75-hover"),
                            ("#FAC4BE", "pink-tuile-975-75-active"),
                            ("#FEE9E7", "pink-tuile-950-100"),
                            ("#FDC6C0", "pink-tuile-950-100-hover"),
                            ("#FCB0A7", "pink-tuile-950-100-active"),
                            ("#A94645", "pink-tuile-sun-425-moon-750"),
                            ("#D5706F", "pink-tuile-sun-425-moon-750-hover"),
                            ("#DA8A89", "pink-tuile-sun-425-moon-750-active"),
                            ("#FDDFDB", "pink-tuile-925-125"),
                            ("#FBB8AD", "pink-tuile-925-125-hover"),
                            ("#FAA191", "pink-tuile-925-125-active"),
                            ("#CE614A", "pink-tuile-main-556"),
                            ("#FCBFB7", "pink-tuile-850-200"),
                            ("#FEF6E3", "yellow-tournesol-975-75"),
                            ("#FCE086", "yellow-tournesol-975-75-hover"),
                            ("#F5D24B", "yellow-tournesol-975-75-active"),
                            ("#FEECC2", "yellow-tournesol-950-100"),
                            ("#FBD335", "yellow-tournesol-950-100-hover"),
                            ("#E6C130", "yellow-tournesol-950-100-active"),
                            ("#716043", "yellow-tournesol-sun-407-moon-922"),
                            ("#A28A62", "yellow-tournesol-sun-407-moon-922-hover"),
                            ("#CAB300", "yellow-tournesol-sun-407-moon-922-active"),
                            ("#FDE39C", "yellow-tournesol-925-125"),
                            ("#E9C53B", "yellow-tournesol-925-125-hover"),
                            ("#D3B235", "yellow-tournesol-925-125-active"),
                            ("#C8AA39", "yellow-tournesol-main-731"),
                            ("#EFCB3A", "yellow-tournesol-850-200"),
                            ("#FEF5E8", "yellow-moutarde-975-75"),
                            ("#FCDCA3", "yellow-moutarde-975-75-hover"),
                            ("#FBCD64", "yellow-moutarde-975-75-active"),
                            ("#FEEBD0", "yellow-moutarde-950-100"),
                            ("#FDCD6D", "yellow-moutarde-950-100-hover"),
                            ("#F4BE30", "yellow-moutarde-950-100-active"),
                            ("#695240", "yellow-moutarde-sun-348-moon-860"),
                            ("#9B7B61", "yellow-moutarde-sun-348-moon-860-hover"),
                            ("#B58F72", "yellow-moutarde-sun-348-moon-860-active"),
                            ("#FDE2B5", "yellow-moutarde-925-125"),
                            ("#F6C43C", "yellow-moutarde-925-125-hover"),
                            ("#DFB135", "yellow-moutarde-925-125-active"),
                            ("#C3992A", "yellow-moutarde-main-679"),
                            ("#FCC63A", "yellow-moutarde-850-200"),
                            ("#FEF4F2", "orange-terre-battue-975-75"),
                            ("#FCD8D0", "orange-terre-battue-975-75-hover"),
                            ("#FAC5B8", "orange-terre-battue-975-75-active"),
                            ("#FEE9E5", "orange-terre-battue-950-100"),
                            ("#FDC6BA", "orange-terre-battue-950-100-hover"),
                            ("#FCB09E", "orange-terre-battue-950-100-active"),
                            ("#755348", "orange-terre-battue-sun-370-moon-672"),
                            ("#AB7B6B", "orange-terre-battue-sun-370-moon-672-hover"),
                            ("#C68F7D", "orange-terre-battue-sun-370-moon-672-active"),
                            ("#FDDFD8", "orange-terre-battue-925-125"),
                            ("#FBB8A5", "orange-terre-battue-925-125-hover"),
                            ("#FAA184", "orange-terre-battue-925-125-active"),
                            ("#E4794A", "orange-terre-battue-main-645"),
                            ("#FCC0B0", "orange-terre-battue-850-200"),
                            ("#FBF6ED", "brown-cafe-creme-975-75"),
                            ("#F2DEB6", "brown-cafe-creme-975-75-hover"),
                            ("#EACF91", "brown-cafe-creme-975-75-active"),
                            ("#F7ECDB", "brown-cafe-creme-950-100"),
                            ("#EDCE94", "brown-cafe-creme-950-100-hover"),
                            ("#DABD84", "brown-cafe-creme-950-100-active"),
                            ("#685C48", "brown-cafe-creme-sun-383-moon-885"),
                            ("#97866A", "brown-cafe-creme-sun-383-moon-885-hover"),
                            ("#AE9B7B", "brown-cafe-creme-sun-383-moon-885-active"),
                            ("#F4E3C7", "brown-cafe-creme-925-125"),
                            ("#E1C386", "brown-cafe-creme-925-125-hover"),
                            ("#CCB078", "brown-cafe-creme-925-125-active"),
                            ("#D1B781", "brown-cafe-creme-main-782"),
                            ("#E7CA8E", "brown-cafe-creme-850-200"),
                            ("#FBF5F2", "brown-caramel-975-75"),
                            ("#F1DBCF", "brown-caramel-975-75-hover"),
                            ("#ECC9B5", "brown-caramel-975-75-active"),
                            ("#F7EBE5", "brown-caramel-950-100"),
                            ("#ECCBB9", "brown-caramel-950-100-hover"),
                            ("#E6B79A", "brown-caramel-950-100-active"),
                            ("#845D48", "brown-caramel-sun-425-moon-901"),
                            ("#BB8568", "brown-caramel-sun-425-moon-901-hover"),
                            ("#D69978", "brown-caramel-sun-425-moon-901-active"),
                            ("#F3E2D9", "brown-caramel-925-125"),
                            ("#E7BEA6", "brown-caramel-925-125-hover"),
                            ("#E1A982", "brown-caramel-925-125-active"),
                            ("#C08C65", "brown-caramel-main-648"),
                            ("#EAC7B2", "brown-caramel-850-200"),
                            ("#FBF5F2", "brown-opera-975-75"),
                            ("#F1DBCF", "brown-opera-975-75-hover"),
                            ("#ECC9B5", "brown-opera-975-75-active"),
                            ("#F7ECE4", "brown-opera-950-100"),
                            ("#ECCDB3", "brown-opera-950-100-hover"),
                            ("#E6BA90", "brown-opera-950-100-active"),
                            ("#745B47", "brown-opera-sun-395-moon-820"),
                            ("#A78468", "brown-opera-sun-395-moon-820-hover"),
                            ("#C09979", "brown-opera-sun-395-moon-820-active"),
                            ("#F3E2D7", "brown-opera-925-125"),
                            ("#E7BFA0", "brown-opera-925-125-hover"),
                            ("#DEAA7E", "brown-opera-925-125-active"),
                            ("#BD987A", "brown-opera-main-680"),
                            ("#EAC7AD", "brown-opera-850-200"),
                            ("#F9F6F2", "beige-gris-galet-975-75"),
                            ("#EADECD", "beige-gris-galet-975-75-hover"),
                            ("#E1CEB1", "beige-gris-galet-975-75-active"),
                            ("#F3EDE5", "beige-gris-galet-950-100"),
                            ("#E1D0B5", "beige-gris-galet-950-100-hover"),
                            ("#D1BEA2", "beige-gris-galet-950-100-active"),
                            ("#6A6156", "beige-gris-galet-sun-407-moon-821"),
                            ("#988B7C", "beige-gris-galet-sun-407-moon-821-hover"),
                            ("#AFA08F", "beige-gris-galet-sun-407-moon-821-active"),
                            ("#EEE4D9", "beige-gris-galet-925-125"),
                            ("#DBC3A4", "beige-gris-galet-925-125-hover"),
                            ("#C6B094", "beige-gris-galet-925-125-active"),
                            ("#AEA397", "beige-gris-galet-main-702"),
                            ("#E0CAB0", "beige-gris-galet-850-200"),
                            ("#00001229", "shadow-color"),
                            ("#AEA397", "beige-gris-galet"),
                            ("#7996E6", "blue-cumulus-sun-368-active"),
                            ("#5982E0", "blue-cumulus-sun-368-hover"),
                            ("#3558A2", "blue-cumulus-sun-368"),
                            ("#417DC4", "blue-cumulus"),
                            ("#6B93F6", "blue-ecume-850-active"),
                            ("#8BA7F8", "blue-ecume-850-hover"),
                            ("#BFCCFB", "blue-ecume-850"),
                            ("#465F9D", "blue-ecume"),
                            ("#A1A1F8", "blue-france-850-hover"),
                            ("#CACAFB", "blue-france-850"),
                            ("#ADADF9", "blue-france-925-active"),
                            ("#C1C1FB", "blue-france-925-hover"),
                            ("#E3E3FD", "blue-france-925"),
                            ("#CECEFC", "blue-france-950-hover"),
                            ("#ECECFE", "blue-france-950"),
                            ("#DCDCFC", "blue-france-975-hover"),
                            ("#F5F5FE", "blue-france-975"),
                            ("#AEAEF9", "blue-france-main-525-active"),
                            ("#9898F8", "blue-france-main-525-hover"),
                            ("#000091", "blue-france-sun-113"),
                            ("#2323FF", "blue-france"),
                            ("#8B7954", "brown-cafe-creme-main-782-active"),
                            ("#A38E63", "brown-cafe-creme-main-782-hover"),
                            ("#D1B781", "brown-cafe-creme"),
                            ("#C08C65", "brown-caramel"),
                            ("#BD987A", "brown-opera"),
                            ("#009099", "green-archipel"),
                            ("#679E3B", "green-bourgeon-850-active"),
                            ("#77B645", "green-bourgeon-850-hover"),
                            ("#95E257", "green-bourgeon-850"),
                            ("#68A532", "green-bourgeon"),
                            ("#00A95F", "green-emeraude"),
                            ("#4F9D91", "green-menthe-850-active"),
                            ("#5BB5A7", "green-menthe-850-hover"),
                            ("#73E0CF", "green-menthe-850"),
                            ("#00E2CB", "green-menthe-main-548-active"),
                            ("#00C7B3", "green-menthe-main-548-hover"),
                            ("#62A9A2", "green-menthe-sun-373-active"),
                            ("#53918C", "green-menthe-sun-373-hover"),
                            ("#37635F", "green-menthe-sun-373"),
                            ("#009081", "green-menthe"),
                            ("#B7A73F", "green-tilleul-verveine"),
                            ("#161616", "grey-50"),
                            ("#3A3A3A", "grey-200"),
                            ("#666666", "grey-425"),
                            ("#CECECE", "grey-850"),
                            ("#DDDDDD", "grey-900"),
                            ("#E5E5E5", "grey-925"),
                            ("#EEEEEE", "grey-950"),
                            ("#F6F6F6", "grey-975"),
                            ("#0063CB", "info-425"),
                            ("#E5E5E5", "light-gray"),
                            ("#F4BFB1", "orange-terre-battue-main-645-active"),
                            ("#F1A892", "orange-terre-battue-main-645-hover"),
                            ("#E4794A", "orange-terre-battue"),
                            ("#E18B76", "pink-macaron"),
                            ("#FA7659", "pink-tuile-850-active"),
                            ("#FB907D", "pink-tuile-850-hover"),
                            ("#FCBFB7", "pink-tuile-850"),
                            ("#CE614A", "pink-tuile"),
                            ("#DB9CD6", "purple-glycine-main-494-active"),
                            ("#D282CD", "purple-glycine-main-494-hover"),
                            ("#A558A0", "purple-glycine"),
                            ("#EB4444", "red-500"),
                            ("#B18A26", "yellow-moutarde-850-active"),
                            ("#CB9F2D", "yellow-moutarde-850-hover"),
                            ("#FCC63A", "yellow-moutarde-850"),
                            ("#C3992A", "yellow-moutarde"),
                            ("#CAB300", "yellow-tournesol"),
                        ],
                        default="#C3992A",
                        help_text="Cette couleur est utilisée uniquement pour la version formulaire (épargnons).",
                        image_field=None,
                        max_length=255,
                        null=True,
                        samples=None,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icône du badge à choisir dans le <a href='https://www.systeme-de-design.gouv.fr/elements-d-interface/fondamentaux-techniques/icones' rel='noopener' target='_blank'>DSFR</a>",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Action - Action",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="CategorieObjet",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("libelle", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "Objet - Catégorie",
            },
        ),
        migrations.CreateModel(
            name="LabelQualite",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("libelle", models.CharField(max_length=255, unique=True)),
                (
                    "code",
                    models.CharField(
                        help_text="Ce champ est utilisé lors de l'import de données, il ne doit pas être mis à jour sous peine de casser l'import de données",
                        max_length=255,
                        unique=True,
                        validators=[qfdmo.validators.CodeValidator()],
                    ),
                ),
                ("afficher", models.BooleanField(default=True)),
                (
                    "bonus",
                    models.BooleanField(
                        default=False, help_text="Ouvre les droits à un bonus financier"
                    ),
                ),
                (
                    "type_enseigne",
                    models.BooleanField(
                        default=False,
                        help_text="Ce label est affiché comme un type d'enseigne, ex : ESS",
                    ),
                ),
                ("url", models.CharField(blank=True, max_length=2048, null=True)),
                (
                    "logo_file",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="logos",
                        validators=[qfdmo.models.acteur.validate_logo],
                    ),
                ),
            ],
            options={
                "verbose_name": "Label qualité",
                "verbose_name_plural": "Labels qualité",
            },
        ),
        migrations.CreateModel(
            name="ActeurActeurService",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "acteur_service",
                    models.ForeignKey(
                        db_column="acteurservice_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.acteurservice",
                    ),
                ),
            ],
            options={
                "db_table": "qfdmo_displayedacteurtemp_acteur_services",
            },
        ),
        migrations.CreateModel(
            name="ActeurType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "code",
                    models.CharField(
                        help_text="Ce champ est utilisé lors de l'import de données, il ne doit pas être mis à jour sous peine de casser l'import de données",
                        max_length=255,
                        unique=True,
                        validators=[qfdmo.validators.CodeValidator()],
                    ),
                ),
                ("libelle", models.CharField(default="?", max_length=255)),
            ],
            options={
                "verbose_name": "Type d'acteur",
                "verbose_name_plural": "Types d'acteur",
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("code__regex", "^[0-9a-z_]+$")),
                        name="acteur_type_code_format",
                    )
                ],
            },
        ),
        migrations.AddField(
            model_name="acteurservice",
            name="actions",
            field=models.ManyToManyField(to="qfdmo.action"),
        ),
        migrations.CreateModel(
            name="ActionDirection",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "code",
                    models.CharField(
                        help_text="Ce champ est utilisé lors de l'import de données, il ne doit pas être mis à jour sous peine de casser l'import de données",
                        max_length=255,
                        unique=True,
                        validators=[qfdmo.validators.CodeValidator()],
                    ),
                ),
                ("order", models.IntegerField(default=0)),
                ("libelle", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "Action - Direction",
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("code__regex", "^[0-9a-z_]+$")),
                        name="action_direction_code_format",
                    )
                ],
            },
        ),
        migrations.AddField(
            model_name="action",
            name="directions",
            field=models.ManyToManyField(
                related_name="actions", to="qfdmo.actiondirection"
            ),
        ),
        migrations.CreateModel(
            name="DisplayedActeurTemp",
            fields=[
                (
                    "cree_le",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                (
                    "modifie_le",
                    models.DateTimeField(
                        auto_now=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                ("nom", models.CharField(db_index=True, max_length=255)),
                (
                    "description",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "identifiant_unique",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "adresse",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "adresse_complement",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "code_postal",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=10,
                    ),
                ),
                (
                    "ville",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=2048
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, db_default="", default="", max_length=254
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "nom_commercial",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "nom_officiel",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "siren",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=9,
                    ),
                ),
                (
                    "siret",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=14,
                    ),
                ),
                (
                    "siret_is_closed",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Indique si le SIRET est fermé ou non dans l'Annuaire Entreprises",
                        null=True,
                        verbose_name="SIRET fermé",
                    ),
                ),
                (
                    "identifiant_externe",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("ACTIF", "actif"),
                            ("INACTIF", "inactif"),
                            ("SUPPRIME", "supprimé"),
                        ],
                        db_default="ACTIF",
                        default="ACTIF",
                        max_length=255,
                    ),
                ),
                (
                    "naf_principal",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "commentaires",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "horaires_osm",
                    models.CharField(
                        blank=True,
                        db_default="",
                        default="",
                        validators=[qfdmo.models.acteur.validate_opening_hours],
                    ),
                ),
                (
                    "horaires_description",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "public_accueilli",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Particuliers et professionnels",
                                "Particuliers et professionnels",
                            ),
                            ("Professionnels", "Professionnels"),
                            ("Particuliers", "Particuliers"),
                            ("Aucun", "Aucun"),
                            ("", ""),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "reprise",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1 pour 0", "1 pour 0"),
                            ("1 pour 1", "1 pour 1"),
                            ("", ""),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "exclusivite_de_reprisereparation",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Exclusivité de reprise/réparation",
                    ),
                ),
                ("uniquement_sur_rdv", models.BooleanField(blank=True, null=True)),
                (
                    "uuid",
                    models.CharField(
                        default=qfdmo.models.acteur.generate_short_uuid,
                        editable=False,
                        max_length=255,
                    ),
                ),
                (
                    "acteur_services",
                    models.ManyToManyField(
                        blank=True,
                        through="qfdmo.ActeurActeurService",
                        to="qfdmo.acteurservice",
                    ),
                ),
                (
                    "acteur_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.acteurtype",
                    ),
                ),
                (
                    "action_principale",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="qfdmo.action",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ActeurLabelQualite",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "acteur",
                    models.ForeignKey(
                        db_column="displayedacteur_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.displayedacteurtemp",
                    ),
                ),
                (
                    "label",
                    models.ForeignKey(
                        db_column="labelqualite_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.labelqualite",
                    ),
                ),
            ],
            options={
                "db_table": "qfdmo_displayedacteurtemp_labels",
            },
        ),
        migrations.AddField(
            model_name="acteuracteurservice",
            name="acteur",
            field=models.ForeignKey(
                db_column="displayedacteur_id",
                on_delete=django.db.models.deletion.CASCADE,
                to="qfdmo.displayedacteurtemp",
            ),
        ),
        migrations.CreateModel(
            name="DisplayedPropositionServiceTemp",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "acteur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposition_services",
                        to="qfdmo.displayedacteurtemp",
                    ),
                ),
                (
                    "action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qfdmo.action"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GroupeAction",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "code",
                    models.CharField(
                        help_text="Ce champ est utilisé lors de l'import de données, il ne doit pas être mis à jour sous peine de casser l'import de données",
                        max_length=255,
                        unique=True,
                        validators=[qfdmo.validators.CodeValidator()],
                    ),
                ),
                ("afficher", models.BooleanField(default=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("order", models.IntegerField(default=0)),
                (
                    "couleur",
                    colorfield.fields.ColorField(
                        blank=True,
                        choices=[
                            ("#FFF", "grey-1000-50"),
                            ("#F6F6F6", "grey-1000-50-hover"),
                            ("#EDEDED", "grey-1000-50-active"),
                            ("#F6F6F6", "grey-975-75"),
                            ("#DFDFDF", "grey-975-75-hover"),
                            ("#CFCFCF", "grey-975-75-active"),
                            ("#EEE", "grey-950-100"),
                            ("#D2D2D2", "grey-950-100-hover"),
                            ("#C1C1C1", "grey-950-100-active"),
                            ("#3A3A3A", "grey-200-850"),
                            ("#616161", "grey-200-850-hover"),
                            ("#777", "grey-200-850-active"),
                            ("#E5E5E5", "grey-925-125"),
                            ("#FFF", "grey-1000-75"),
                            ("#F6F6F6", "grey-1000-75-hover"),
                            ("#EDEDED", "grey-1000-75-active"),
                            ("#FFF", "grey-1000-100"),
                            ("#F6F6F6", "grey-1000-100-hover"),
                            ("#EDEDED", "grey-1000-100-active"),
                            ("#F6F6F6", "grey-975-100"),
                            ("#DFDFDF", "grey-975-100-hover"),
                            ("#CFCFCF", "grey-975-100-active"),
                            ("#F6F6F6", "grey-975-125"),
                            ("#DFDFDF", "grey-975-125-hover"),
                            ("#CFCFCF", "grey-975-125-active"),
                            ("#EEE", "grey-950-125"),
                            ("#D2D2D2", "grey-950-125-hover"),
                            ("#C1C1C1", "grey-950-125-active"),
                            ("#EEE", "grey-950-150"),
                            ("#D2D2D2", "grey-950-150-hover"),
                            ("#C1C1C1", "grey-950-150-active"),
                            ("#161616", "grey-50-1000"),
                            ("#666", "grey-425-625"),
                            ("#929292", "grey-625-425"),
                            ("#000", "grey-0-1000"),
                            ("#DDD", "grey-900-175"),
                            ("#F5F5FE", "blue-france-975-75"),
                            ("#DCDCFC", "blue-france-975-75-hover"),
                            ("#CBCBFA", "blue-france-975-75-active"),
                            ("#ECECFE", "blue-france-950-100"),
                            ("#CECEFC", "blue-france-950-100-hover"),
                            ("#BBBBFC", "blue-france-950-100-active"),
                            ("#000091", "blue-france-sun-113-625"),
                            ("#1212FF", "blue-france-sun-113-625-hover"),
                            ("#2323FF", "blue-france-sun-113-625-active"),
                            ("#E3E3FD", "blue-france-925-125"),
                            ("#C1C1FB", "blue-france-925-125-hover"),
                            ("#ADADF9", "blue-france-925-125-active"),
                            ("#F5F5FE", "blue-france-975-sun-113"),
                            ("#6A6AF4", "blue-france-main-525"),
                            ("#CACAFB", "blue-france-850-200"),
                            ("#FEF4F4", "red-marianne-975-75"),
                            ("#FCD7D7", "red-marianne-975-75-hover"),
                            ("#FAC4C4", "red-marianne-975-75-active"),
                            ("#FEE9E9", "red-marianne-950-100"),
                            ("#FDC5C5", "red-marianne-950-100-hover"),
                            ("#FCAFAF", "red-marianne-950-100-active"),
                            ("#C9191E", "red-marianne-425-625"),
                            ("#F93F42", "red-marianne-425-625-hover"),
                            ("#F95A5C", "red-marianne-425-625-active"),
                            ("#FDDEDE", "red-marianne-925-125"),
                            ("#FBB6B6", "red-marianne-925-125-hover"),
                            ("#FA9E9E", "red-marianne-925-125-active"),
                            ("#E1000F", "red-marianne-main-472"),
                            ("#FCBFBF", "red-marianne-850-200"),
                            ("#E8EDFF", "info-950-100"),
                            ("#C2D1FF", "info-950-100-hover"),
                            ("#A9BFFF", "info-950-100-active"),
                            ("#0063CB", "info-425-625"),
                            ("#3B87FF", "info-425-625-hover"),
                            ("#6798FF", "info-425-625-active"),
                            ("#F4F6FF", "info-975-75"),
                            ("#B8FEC9", "success-950-100"),
                            ("#46FD89", "success-950-100-hover"),
                            ("#34EB7B", "success-950-100-active"),
                            ("#18753C", "success-425-625"),
                            ("#27A959", "success-425-625-hover"),
                            ("#2FC368", "success-425-625-active"),
                            ("#DFFEE6", "success-975-75"),
                            ("#FFE9E6", "warning-950-100"),
                            ("#FFC6BD", "warning-950-100-hover"),
                            ("#FFB0A2", "warning-950-100-active"),
                            ("#B34000", "warning-425-625"),
                            ("#FF6218", "warning-425-625-hover"),
                            ("#FF7A55", "warning-425-625-active"),
                            ("#FFF4F3", "warning-975-75"),
                            ("#FFE9E9", "error-950-100"),
                            ("#FFC5C5", "error-950-100-hover"),
                            ("#FFAFAF", "error-950-100-active"),
                            ("#CE0500", "error-425-625"),
                            ("#FF2725", "error-425-625-hover"),
                            ("#FF4140", "error-425-625-active"),
                            ("#FFF4F4", "error-975-75"),
                            ("#FEF7DA", "green-tilleul-verveine-975-75"),
                            ("#FCE552", "green-tilleul-verveine-975-75-hover"),
                            ("#EBD54C", "green-tilleul-verveine-975-75-active"),
                            ("#FCEEAC", "green-tilleul-verveine-950-100"),
                            ("#E8D45C", "green-tilleul-verveine-950-100-hover"),
                            ("#D4C254", "green-tilleul-verveine-950-100-active"),
                            ("#66673D", "green-tilleul-verveine-sun-418-moon-817"),
                            (
                                "#929359",
                                "green-tilleul-verveine-sun-418-moon-817-hover",
                            ),
                            (
                                "#A7A967",
                                "green-tilleul-verveine-sun-418-moon-817-active",
                            ),
                            ("#FBE769", "green-tilleul-verveine-925-125"),
                            ("#D7C655", "green-tilleul-verveine-925-125-hover"),
                            ("#C2B24C", "green-tilleul-verveine-925-125-active"),
                            ("#B7A73F", "green-tilleul-verveine-main-707"),
                            ("#E2CF58", "green-tilleul-verveine-850-200"),
                            ("#E6FEDA", "green-bourgeon-975-75"),
                            ("#A7FC62", "green-bourgeon-975-75-hover"),
                            ("#98ED4D", "green-bourgeon-975-75-active"),
                            ("#C9FCAC", "green-bourgeon-950-100"),
                            ("#9AE95D", "green-bourgeon-950-100-hover"),
                            ("#8DD555", "green-bourgeon-950-100-active"),
                            ("#447049", "green-bourgeon-sun-425-moon-759"),
                            ("#639F6A", "green-bourgeon-sun-425-moon-759-hover"),
                            ("#72B77A", "green-bourgeon-sun-425-moon-759-active"),
                            ("#A9FB68", "green-bourgeon-925-125"),
                            ("#8ED654", "green-bourgeon-925-125-hover"),
                            ("#7FC04B", "green-bourgeon-925-125-active"),
                            ("#68A532", "green-bourgeon-main-640"),
                            ("#95E257", "green-bourgeon-850-200"),
                            ("#E3FDEB", "green-emeraude-975-75"),
                            ("#94F9B9", "green-emeraude-975-75-hover"),
                            ("#6DF1A3", "green-emeraude-975-75-active"),
                            ("#C3FAD5", "green-emeraude-950-100"),
                            ("#77EDA5", "green-emeraude-950-100-hover"),
                            ("#6DD897", "green-emeraude-950-100-active"),
                            ("#297254", "green-emeraude-sun-425-moon-753"),
                            ("#3EA47A", "green-emeraude-sun-425-moon-753-hover"),
                            ("#49BC8D", "green-emeraude-sun-425-moon-753-active"),
                            ("#9EF9BE", "green-emeraude-925-125"),
                            ("#69DF97", "green-emeraude-925-125-hover"),
                            ("#5EC988", "green-emeraude-925-125-active"),
                            ("#00A95F", "green-emeraude-main-632"),
                            ("#6FE49D", "green-emeraude-850-200"),
                            ("#DFFDF7", "green-menthe-975-75"),
                            ("#84F9E7", "green-menthe-975-75-hover"),
                            ("#70EBD8", "green-menthe-975-75-active"),
                            ("#BAFAEE", "green-menthe-950-100"),
                            ("#79E7D5", "green-menthe-950-100-hover"),
                            ("#6FD3C3", "green-menthe-950-100-active"),
                            ("#37635F", "green-menthe-sun-373-moon-652"),
                            ("#53918C", "green-menthe-sun-373-moon-652-hover"),
                            ("#62A9A2", "green-menthe-sun-373-moon-652-active"),
                            ("#8BF8E7", "green-menthe-925-125"),
                            ("#6ED5C5", "green-menthe-925-125-hover"),
                            ("#62BFB1", "green-menthe-925-125-active"),
                            ("#009081", "green-menthe-main-548"),
                            ("#73E0CF", "green-menthe-850-200"),
                            ("#E5FBFD", "green-archipel-975-75"),
                            ("#99F2F8", "green-archipel-975-75-hover"),
                            ("#73E9F0", "green-archipel-975-75-active"),
                            ("#C7F6FC", "green-archipel-950-100"),
                            ("#64ECF8", "green-archipel-950-100-hover"),
                            ("#5BD8E3", "green-archipel-950-100-active"),
                            ("#006A6F", "green-archipel-sun-391-moon-716"),
                            ("#009FA7", "green-archipel-sun-391-moon-716-hover"),
                            ("#00BBC3", "green-archipel-sun-391-moon-716-active"),
                            ("#A6F2FA", "green-archipel-925-125"),
                            ("#62DBE5", "green-archipel-925-125-hover"),
                            ("#58C5CF", "green-archipel-925-125-active"),
                            ("#009099", "green-archipel-main-557"),
                            ("#60E0EB", "green-archipel-850-200"),
                            ("#F4F6FE", "blue-ecume-975-75"),
                            ("#D7DFFB", "blue-ecume-975-75-hover"),
                            ("#C3CFFA", "blue-ecume-975-75-active"),
                            ("#E9EDFE", "blue-ecume-950-100"),
                            ("#C5D0FC", "blue-ecume-950-100-hover"),
                            ("#ADBFFC", "blue-ecume-950-100-active"),
                            ("#2F4077", "blue-ecume-sun-247-moon-675"),
                            ("#4E68BB", "blue-ecume-sun-247-moon-675-hover"),
                            ("#667DCF", "blue-ecume-sun-247-moon-675-active"),
                            ("#DEE5FD", "blue-ecume-925-125"),
                            ("#B4C5FB", "blue-ecume-925-125-hover"),
                            ("#99B3F9", "blue-ecume-925-125-active"),
                            ("#465F9D", "blue-ecume-main-400"),
                            ("#BFCCFB", "blue-ecume-850-200"),
                            ("#F3F6FE", "blue-cumulus-975-75"),
                            ("#D3DFFC", "blue-cumulus-975-75-hover"),
                            ("#BED0FA", "blue-cumulus-975-75-active"),
                            ("#E6EEFE", "blue-cumulus-950-100"),
                            ("#BCD3FC", "blue-cumulus-950-100-hover"),
                            ("#9FC3FC", "blue-cumulus-950-100-active"),
                            ("#3558A2", "blue-cumulus-sun-368-moon-732"),
                            ("#5982E0", "blue-cumulus-sun-368-moon-732-hover"),
                            ("#7996E6", "blue-cumulus-sun-368-moon-732-active"),
                            ("#DAE6FD", "blue-cumulus-925-125"),
                            ("#A9C8FB", "blue-cumulus-925-125-hover"),
                            ("#8AB8F9", "blue-cumulus-925-125-active"),
                            ("#417DC4", "blue-cumulus-main-526"),
                            ("#B6CFFB", "blue-cumulus-850-200"),
                            ("#FEF3FD", "purple-glycine-975-75"),
                            ("#FCD4F8", "purple-glycine-975-75-hover"),
                            ("#FABFF5", "purple-glycine-975-75-active"),
                            ("#FEE7FC", "purple-glycine-950-100"),
                            ("#FDC0F8", "purple-glycine-950-100-hover"),
                            ("#FCA8F6", "purple-glycine-950-100-active"),
                            ("#6E445A", "purple-glycine-sun-319-moon-630"),
                            ("#A66989", "purple-glycine-sun-319-moon-630-hover"),
                            ("#BB7F9E", "purple-glycine-sun-319-moon-630-active"),
                            ("#FDDBFA", "purple-glycine-925-125"),
                            ("#FBAFF5", "purple-glycine-925-125-hover"),
                            ("#FA96F2", "purple-glycine-925-125-active"),
                            ("#A558A0", "purple-glycine-main-494"),
                            ("#FBB8F6", "purple-glycine-850-200"),
                            ("#FEF4F2", "pink-macaron-975-75"),
                            ("#FCD8D0", "pink-macaron-975-75-hover"),
                            ("#FAC5B8", "pink-macaron-975-75-active"),
                            ("#FEE9E6", "pink-macaron-950-100"),
                            ("#FDC6BD", "pink-macaron-950-100-hover"),
                            ("#FCB0A2", "pink-macaron-950-100-active"),
                            ("#8D533E", "pink-macaron-sun-406-moon-833"),
                            ("#CA795C", "pink-macaron-sun-406-moon-833-hover"),
                            ("#E08E73", "pink-macaron-sun-406-moon-833-active"),
                            ("#FDDFDA", "pink-macaron-925-125"),
                            ("#FBB8AB", "pink-macaron-925-125-hover"),
                            ("#FAA18D", "pink-macaron-925-125-active"),
                            ("#E18B76", "pink-macaron-main-689"),
                            ("#FCC0B4", "pink-macaron-850-200"),
                            ("#FEF4F3", "pink-tuile-975-75"),
                            ("#FCD7D3", "pink-tuile-975-75-hover"),
                            ("#FAC4BE", "pink-tuile-975-75-active"),
                            ("#FEE9E7", "pink-tuile-950-100"),
                            ("#FDC6C0", "pink-tuile-950-100-hover"),
                            ("#FCB0A7", "pink-tuile-950-100-active"),
                            ("#A94645", "pink-tuile-sun-425-moon-750"),
                            ("#D5706F", "pink-tuile-sun-425-moon-750-hover"),
                            ("#DA8A89", "pink-tuile-sun-425-moon-750-active"),
                            ("#FDDFDB", "pink-tuile-925-125"),
                            ("#FBB8AD", "pink-tuile-925-125-hover"),
                            ("#FAA191", "pink-tuile-925-125-active"),
                            ("#CE614A", "pink-tuile-main-556"),
                            ("#FCBFB7", "pink-tuile-850-200"),
                            ("#FEF6E3", "yellow-tournesol-975-75"),
                            ("#FCE086", "yellow-tournesol-975-75-hover"),
                            ("#F5D24B", "yellow-tournesol-975-75-active"),
                            ("#FEECC2", "yellow-tournesol-950-100"),
                            ("#FBD335", "yellow-tournesol-950-100-hover"),
                            ("#E6C130", "yellow-tournesol-950-100-active"),
                            ("#716043", "yellow-tournesol-sun-407-moon-922"),
                            ("#A28A62", "yellow-tournesol-sun-407-moon-922-hover"),
                            ("#CAB300", "yellow-tournesol-sun-407-moon-922-active"),
                            ("#FDE39C", "yellow-tournesol-925-125"),
                            ("#E9C53B", "yellow-tournesol-925-125-hover"),
                            ("#D3B235", "yellow-tournesol-925-125-active"),
                            ("#C8AA39", "yellow-tournesol-main-731"),
                            ("#EFCB3A", "yellow-tournesol-850-200"),
                            ("#FEF5E8", "yellow-moutarde-975-75"),
                            ("#FCDCA3", "yellow-moutarde-975-75-hover"),
                            ("#FBCD64", "yellow-moutarde-975-75-active"),
                            ("#FEEBD0", "yellow-moutarde-950-100"),
                            ("#FDCD6D", "yellow-moutarde-950-100-hover"),
                            ("#F4BE30", "yellow-moutarde-950-100-active"),
                            ("#695240", "yellow-moutarde-sun-348-moon-860"),
                            ("#9B7B61", "yellow-moutarde-sun-348-moon-860-hover"),
                            ("#B58F72", "yellow-moutarde-sun-348-moon-860-active"),
                            ("#FDE2B5", "yellow-moutarde-925-125"),
                            ("#F6C43C", "yellow-moutarde-925-125-hover"),
                            ("#DFB135", "yellow-moutarde-925-125-active"),
                            ("#C3992A", "yellow-moutarde-main-679"),
                            ("#FCC63A", "yellow-moutarde-850-200"),
                            ("#FEF4F2", "orange-terre-battue-975-75"),
                            ("#FCD8D0", "orange-terre-battue-975-75-hover"),
                            ("#FAC5B8", "orange-terre-battue-975-75-active"),
                            ("#FEE9E5", "orange-terre-battue-950-100"),
                            ("#FDC6BA", "orange-terre-battue-950-100-hover"),
                            ("#FCB09E", "orange-terre-battue-950-100-active"),
                            ("#755348", "orange-terre-battue-sun-370-moon-672"),
                            ("#AB7B6B", "orange-terre-battue-sun-370-moon-672-hover"),
                            ("#C68F7D", "orange-terre-battue-sun-370-moon-672-active"),
                            ("#FDDFD8", "orange-terre-battue-925-125"),
                            ("#FBB8A5", "orange-terre-battue-925-125-hover"),
                            ("#FAA184", "orange-terre-battue-925-125-active"),
                            ("#E4794A", "orange-terre-battue-main-645"),
                            ("#FCC0B0", "orange-terre-battue-850-200"),
                            ("#FBF6ED", "brown-cafe-creme-975-75"),
                            ("#F2DEB6", "brown-cafe-creme-975-75-hover"),
                            ("#EACF91", "brown-cafe-creme-975-75-active"),
                            ("#F7ECDB", "brown-cafe-creme-950-100"),
                            ("#EDCE94", "brown-cafe-creme-950-100-hover"),
                            ("#DABD84", "brown-cafe-creme-950-100-active"),
                            ("#685C48", "brown-cafe-creme-sun-383-moon-885"),
                            ("#97866A", "brown-cafe-creme-sun-383-moon-885-hover"),
                            ("#AE9B7B", "brown-cafe-creme-sun-383-moon-885-active"),
                            ("#F4E3C7", "brown-cafe-creme-925-125"),
                            ("#E1C386", "brown-cafe-creme-925-125-hover"),
                            ("#CCB078", "brown-cafe-creme-925-125-active"),
                            ("#D1B781", "brown-cafe-creme-main-782"),
                            ("#E7CA8E", "brown-cafe-creme-850-200"),
                            ("#FBF5F2", "brown-caramel-975-75"),
                            ("#F1DBCF", "brown-caramel-975-75-hover"),
                            ("#ECC9B5", "brown-caramel-975-75-active"),
                            ("#F7EBE5", "brown-caramel-950-100"),
                            ("#ECCBB9", "brown-caramel-950-100-hover"),
                            ("#E6B79A", "brown-caramel-950-100-active"),
                            ("#845D48", "brown-caramel-sun-425-moon-901"),
                            ("#BB8568", "brown-caramel-sun-425-moon-901-hover"),
                            ("#D69978", "brown-caramel-sun-425-moon-901-active"),
                            ("#F3E2D9", "brown-caramel-925-125"),
                            ("#E7BEA6", "brown-caramel-925-125-hover"),
                            ("#E1A982", "brown-caramel-925-125-active"),
                            ("#C08C65", "brown-caramel-main-648"),
                            ("#EAC7B2", "brown-caramel-850-200"),
                            ("#FBF5F2", "brown-opera-975-75"),
                            ("#F1DBCF", "brown-opera-975-75-hover"),
                            ("#ECC9B5", "brown-opera-975-75-active"),
                            ("#F7ECE4", "brown-opera-950-100"),
                            ("#ECCDB3", "brown-opera-950-100-hover"),
                            ("#E6BA90", "brown-opera-950-100-active"),
                            ("#745B47", "brown-opera-sun-395-moon-820"),
                            ("#A78468", "brown-opera-sun-395-moon-820-hover"),
                            ("#C09979", "brown-opera-sun-395-moon-820-active"),
                            ("#F3E2D7", "brown-opera-925-125"),
                            ("#E7BFA0", "brown-opera-925-125-hover"),
                            ("#DEAA7E", "brown-opera-925-125-active"),
                            ("#BD987A", "brown-opera-main-680"),
                            ("#EAC7AD", "brown-opera-850-200"),
                            ("#F9F6F2", "beige-gris-galet-975-75"),
                            ("#EADECD", "beige-gris-galet-975-75-hover"),
                            ("#E1CEB1", "beige-gris-galet-975-75-active"),
                            ("#F3EDE5", "beige-gris-galet-950-100"),
                            ("#E1D0B5", "beige-gris-galet-950-100-hover"),
                            ("#D1BEA2", "beige-gris-galet-950-100-active"),
                            ("#6A6156", "beige-gris-galet-sun-407-moon-821"),
                            ("#988B7C", "beige-gris-galet-sun-407-moon-821-hover"),
                            ("#AFA08F", "beige-gris-galet-sun-407-moon-821-active"),
                            ("#EEE4D9", "beige-gris-galet-925-125"),
                            ("#DBC3A4", "beige-gris-galet-925-125-hover"),
                            ("#C6B094", "beige-gris-galet-925-125-active"),
                            ("#AEA397", "beige-gris-galet-main-702"),
                            ("#E0CAB0", "beige-gris-galet-850-200"),
                            ("#00001229", "shadow-color"),
                            ("#AEA397", "beige-gris-galet"),
                            ("#7996E6", "blue-cumulus-sun-368-active"),
                            ("#5982E0", "blue-cumulus-sun-368-hover"),
                            ("#3558A2", "blue-cumulus-sun-368"),
                            ("#417DC4", "blue-cumulus"),
                            ("#6B93F6", "blue-ecume-850-active"),
                            ("#8BA7F8", "blue-ecume-850-hover"),
                            ("#BFCCFB", "blue-ecume-850"),
                            ("#465F9D", "blue-ecume"),
                            ("#A1A1F8", "blue-france-850-hover"),
                            ("#CACAFB", "blue-france-850"),
                            ("#ADADF9", "blue-france-925-active"),
                            ("#C1C1FB", "blue-france-925-hover"),
                            ("#E3E3FD", "blue-france-925"),
                            ("#CECEFC", "blue-france-950-hover"),
                            ("#ECECFE", "blue-france-950"),
                            ("#DCDCFC", "blue-france-975-hover"),
                            ("#F5F5FE", "blue-france-975"),
                            ("#AEAEF9", "blue-france-main-525-active"),
                            ("#9898F8", "blue-france-main-525-hover"),
                            ("#000091", "blue-france-sun-113"),
                            ("#2323FF", "blue-france"),
                            ("#8B7954", "brown-cafe-creme-main-782-active"),
                            ("#A38E63", "brown-cafe-creme-main-782-hover"),
                            ("#D1B781", "brown-cafe-creme"),
                            ("#C08C65", "brown-caramel"),
                            ("#BD987A", "brown-opera"),
                            ("#009099", "green-archipel"),
                            ("#679E3B", "green-bourgeon-850-active"),
                            ("#77B645", "green-bourgeon-850-hover"),
                            ("#95E257", "green-bourgeon-850"),
                            ("#68A532", "green-bourgeon"),
                            ("#00A95F", "green-emeraude"),
                            ("#4F9D91", "green-menthe-850-active"),
                            ("#5BB5A7", "green-menthe-850-hover"),
                            ("#73E0CF", "green-menthe-850"),
                            ("#00E2CB", "green-menthe-main-548-active"),
                            ("#00C7B3", "green-menthe-main-548-hover"),
                            ("#62A9A2", "green-menthe-sun-373-active"),
                            ("#53918C", "green-menthe-sun-373-hover"),
                            ("#37635F", "green-menthe-sun-373"),
                            ("#009081", "green-menthe"),
                            ("#B7A73F", "green-tilleul-verveine"),
                            ("#161616", "grey-50"),
                            ("#3A3A3A", "grey-200"),
                            ("#666666", "grey-425"),
                            ("#CECECE", "grey-850"),
                            ("#DDDDDD", "grey-900"),
                            ("#E5E5E5", "grey-925"),
                            ("#EEEEEE", "grey-950"),
                            ("#F6F6F6", "grey-975"),
                            ("#0063CB", "info-425"),
                            ("#E5E5E5", "light-gray"),
                            ("#F4BFB1", "orange-terre-battue-main-645-active"),
                            ("#F1A892", "orange-terre-battue-main-645-hover"),
                            ("#E4794A", "orange-terre-battue"),
                            ("#E18B76", "pink-macaron"),
                            ("#FA7659", "pink-tuile-850-active"),
                            ("#FB907D", "pink-tuile-850-hover"),
                            ("#FCBFB7", "pink-tuile-850"),
                            ("#CE614A", "pink-tuile"),
                            ("#DB9CD6", "purple-glycine-main-494-active"),
                            ("#D282CD", "purple-glycine-main-494-hover"),
                            ("#A558A0", "purple-glycine"),
                            ("#EB4444", "red-500"),
                            ("#B18A26", "yellow-moutarde-850-active"),
                            ("#CB9F2D", "yellow-moutarde-850-hover"),
                            ("#FCC63A", "yellow-moutarde-850"),
                            ("#C3992A", "yellow-moutarde"),
                            ("#CAB300", "yellow-tournesol"),
                        ],
                        default="#C3992A",
                        image_field=None,
                        max_length=255,
                        null=True,
                        samples=None,
                    ),
                ),
                (
                    "couleur_claire",
                    colorfield.fields.ColorField(
                        blank=True,
                        choices=[
                            ("#FFF", "grey-1000-50"),
                            ("#F6F6F6", "grey-1000-50-hover"),
                            ("#EDEDED", "grey-1000-50-active"),
                            ("#F6F6F6", "grey-975-75"),
                            ("#DFDFDF", "grey-975-75-hover"),
                            ("#CFCFCF", "grey-975-75-active"),
                            ("#EEE", "grey-950-100"),
                            ("#D2D2D2", "grey-950-100-hover"),
                            ("#C1C1C1", "grey-950-100-active"),
                            ("#3A3A3A", "grey-200-850"),
                            ("#616161", "grey-200-850-hover"),
                            ("#777", "grey-200-850-active"),
                            ("#E5E5E5", "grey-925-125"),
                            ("#FFF", "grey-1000-75"),
                            ("#F6F6F6", "grey-1000-75-hover"),
                            ("#EDEDED", "grey-1000-75-active"),
                            ("#FFF", "grey-1000-100"),
                            ("#F6F6F6", "grey-1000-100-hover"),
                            ("#EDEDED", "grey-1000-100-active"),
                            ("#F6F6F6", "grey-975-100"),
                            ("#DFDFDF", "grey-975-100-hover"),
                            ("#CFCFCF", "grey-975-100-active"),
                            ("#F6F6F6", "grey-975-125"),
                            ("#DFDFDF", "grey-975-125-hover"),
                            ("#CFCFCF", "grey-975-125-active"),
                            ("#EEE", "grey-950-125"),
                            ("#D2D2D2", "grey-950-125-hover"),
                            ("#C1C1C1", "grey-950-125-active"),
                            ("#EEE", "grey-950-150"),
                            ("#D2D2D2", "grey-950-150-hover"),
                            ("#C1C1C1", "grey-950-150-active"),
                            ("#161616", "grey-50-1000"),
                            ("#666", "grey-425-625"),
                            ("#929292", "grey-625-425"),
                            ("#000", "grey-0-1000"),
                            ("#DDD", "grey-900-175"),
                            ("#F5F5FE", "blue-france-975-75"),
                            ("#DCDCFC", "blue-france-975-75-hover"),
                            ("#CBCBFA", "blue-france-975-75-active"),
                            ("#ECECFE", "blue-france-950-100"),
                            ("#CECEFC", "blue-france-950-100-hover"),
                            ("#BBBBFC", "blue-france-950-100-active"),
                            ("#000091", "blue-france-sun-113-625"),
                            ("#1212FF", "blue-france-sun-113-625-hover"),
                            ("#2323FF", "blue-france-sun-113-625-active"),
                            ("#E3E3FD", "blue-france-925-125"),
                            ("#C1C1FB", "blue-france-925-125-hover"),
                            ("#ADADF9", "blue-france-925-125-active"),
                            ("#F5F5FE", "blue-france-975-sun-113"),
                            ("#6A6AF4", "blue-france-main-525"),
                            ("#CACAFB", "blue-france-850-200"),
                            ("#FEF4F4", "red-marianne-975-75"),
                            ("#FCD7D7", "red-marianne-975-75-hover"),
                            ("#FAC4C4", "red-marianne-975-75-active"),
                            ("#FEE9E9", "red-marianne-950-100"),
                            ("#FDC5C5", "red-marianne-950-100-hover"),
                            ("#FCAFAF", "red-marianne-950-100-active"),
                            ("#C9191E", "red-marianne-425-625"),
                            ("#F93F42", "red-marianne-425-625-hover"),
                            ("#F95A5C", "red-marianne-425-625-active"),
                            ("#FDDEDE", "red-marianne-925-125"),
                            ("#FBB6B6", "red-marianne-925-125-hover"),
                            ("#FA9E9E", "red-marianne-925-125-active"),
                            ("#E1000F", "red-marianne-main-472"),
                            ("#FCBFBF", "red-marianne-850-200"),
                            ("#E8EDFF", "info-950-100"),
                            ("#C2D1FF", "info-950-100-hover"),
                            ("#A9BFFF", "info-950-100-active"),
                            ("#0063CB", "info-425-625"),
                            ("#3B87FF", "info-425-625-hover"),
                            ("#6798FF", "info-425-625-active"),
                            ("#F4F6FF", "info-975-75"),
                            ("#B8FEC9", "success-950-100"),
                            ("#46FD89", "success-950-100-hover"),
                            ("#34EB7B", "success-950-100-active"),
                            ("#18753C", "success-425-625"),
                            ("#27A959", "success-425-625-hover"),
                            ("#2FC368", "success-425-625-active"),
                            ("#DFFEE6", "success-975-75"),
                            ("#FFE9E6", "warning-950-100"),
                            ("#FFC6BD", "warning-950-100-hover"),
                            ("#FFB0A2", "warning-950-100-active"),
                            ("#B34000", "warning-425-625"),
                            ("#FF6218", "warning-425-625-hover"),
                            ("#FF7A55", "warning-425-625-active"),
                            ("#FFF4F3", "warning-975-75"),
                            ("#FFE9E9", "error-950-100"),
                            ("#FFC5C5", "error-950-100-hover"),
                            ("#FFAFAF", "error-950-100-active"),
                            ("#CE0500", "error-425-625"),
                            ("#FF2725", "error-425-625-hover"),
                            ("#FF4140", "error-425-625-active"),
                            ("#FFF4F4", "error-975-75"),
                            ("#FEF7DA", "green-tilleul-verveine-975-75"),
                            ("#FCE552", "green-tilleul-verveine-975-75-hover"),
                            ("#EBD54C", "green-tilleul-verveine-975-75-active"),
                            ("#FCEEAC", "green-tilleul-verveine-950-100"),
                            ("#E8D45C", "green-tilleul-verveine-950-100-hover"),
                            ("#D4C254", "green-tilleul-verveine-950-100-active"),
                            ("#66673D", "green-tilleul-verveine-sun-418-moon-817"),
                            (
                                "#929359",
                                "green-tilleul-verveine-sun-418-moon-817-hover",
                            ),
                            (
                                "#A7A967",
                                "green-tilleul-verveine-sun-418-moon-817-active",
                            ),
                            ("#FBE769", "green-tilleul-verveine-925-125"),
                            ("#D7C655", "green-tilleul-verveine-925-125-hover"),
                            ("#C2B24C", "green-tilleul-verveine-925-125-active"),
                            ("#B7A73F", "green-tilleul-verveine-main-707"),
                            ("#E2CF58", "green-tilleul-verveine-850-200"),
                            ("#E6FEDA", "green-bourgeon-975-75"),
                            ("#A7FC62", "green-bourgeon-975-75-hover"),
                            ("#98ED4D", "green-bourgeon-975-75-active"),
                            ("#C9FCAC", "green-bourgeon-950-100"),
                            ("#9AE95D", "green-bourgeon-950-100-hover"),
                            ("#8DD555", "green-bourgeon-950-100-active"),
                            ("#447049", "green-bourgeon-sun-425-moon-759"),
                            ("#639F6A", "green-bourgeon-sun-425-moon-759-hover"),
                            ("#72B77A", "green-bourgeon-sun-425-moon-759-active"),
                            ("#A9FB68", "green-bourgeon-925-125"),
                            ("#8ED654", "green-bourgeon-925-125-hover"),
                            ("#7FC04B", "green-bourgeon-925-125-active"),
                            ("#68A532", "green-bourgeon-main-640"),
                            ("#95E257", "green-bourgeon-850-200"),
                            ("#E3FDEB", "green-emeraude-975-75"),
                            ("#94F9B9", "green-emeraude-975-75-hover"),
                            ("#6DF1A3", "green-emeraude-975-75-active"),
                            ("#C3FAD5", "green-emeraude-950-100"),
                            ("#77EDA5", "green-emeraude-950-100-hover"),
                            ("#6DD897", "green-emeraude-950-100-active"),
                            ("#297254", "green-emeraude-sun-425-moon-753"),
                            ("#3EA47A", "green-emeraude-sun-425-moon-753-hover"),
                            ("#49BC8D", "green-emeraude-sun-425-moon-753-active"),
                            ("#9EF9BE", "green-emeraude-925-125"),
                            ("#69DF97", "green-emeraude-925-125-hover"),
                            ("#5EC988", "green-emeraude-925-125-active"),
                            ("#00A95F", "green-emeraude-main-632"),
                            ("#6FE49D", "green-emeraude-850-200"),
                            ("#DFFDF7", "green-menthe-975-75"),
                            ("#84F9E7", "green-menthe-975-75-hover"),
                            ("#70EBD8", "green-menthe-975-75-active"),
                            ("#BAFAEE", "green-menthe-950-100"),
                            ("#79E7D5", "green-menthe-950-100-hover"),
                            ("#6FD3C3", "green-menthe-950-100-active"),
                            ("#37635F", "green-menthe-sun-373-moon-652"),
                            ("#53918C", "green-menthe-sun-373-moon-652-hover"),
                            ("#62A9A2", "green-menthe-sun-373-moon-652-active"),
                            ("#8BF8E7", "green-menthe-925-125"),
                            ("#6ED5C5", "green-menthe-925-125-hover"),
                            ("#62BFB1", "green-menthe-925-125-active"),
                            ("#009081", "green-menthe-main-548"),
                            ("#73E0CF", "green-menthe-850-200"),
                            ("#E5FBFD", "green-archipel-975-75"),
                            ("#99F2F8", "green-archipel-975-75-hover"),
                            ("#73E9F0", "green-archipel-975-75-active"),
                            ("#C7F6FC", "green-archipel-950-100"),
                            ("#64ECF8", "green-archipel-950-100-hover"),
                            ("#5BD8E3", "green-archipel-950-100-active"),
                            ("#006A6F", "green-archipel-sun-391-moon-716"),
                            ("#009FA7", "green-archipel-sun-391-moon-716-hover"),
                            ("#00BBC3", "green-archipel-sun-391-moon-716-active"),
                            ("#A6F2FA", "green-archipel-925-125"),
                            ("#62DBE5", "green-archipel-925-125-hover"),
                            ("#58C5CF", "green-archipel-925-125-active"),
                            ("#009099", "green-archipel-main-557"),
                            ("#60E0EB", "green-archipel-850-200"),
                            ("#F4F6FE", "blue-ecume-975-75"),
                            ("#D7DFFB", "blue-ecume-975-75-hover"),
                            ("#C3CFFA", "blue-ecume-975-75-active"),
                            ("#E9EDFE", "blue-ecume-950-100"),
                            ("#C5D0FC", "blue-ecume-950-100-hover"),
                            ("#ADBFFC", "blue-ecume-950-100-active"),
                            ("#2F4077", "blue-ecume-sun-247-moon-675"),
                            ("#4E68BB", "blue-ecume-sun-247-moon-675-hover"),
                            ("#667DCF", "blue-ecume-sun-247-moon-675-active"),
                            ("#DEE5FD", "blue-ecume-925-125"),
                            ("#B4C5FB", "blue-ecume-925-125-hover"),
                            ("#99B3F9", "blue-ecume-925-125-active"),
                            ("#465F9D", "blue-ecume-main-400"),
                            ("#BFCCFB", "blue-ecume-850-200"),
                            ("#F3F6FE", "blue-cumulus-975-75"),
                            ("#D3DFFC", "blue-cumulus-975-75-hover"),
                            ("#BED0FA", "blue-cumulus-975-75-active"),
                            ("#E6EEFE", "blue-cumulus-950-100"),
                            ("#BCD3FC", "blue-cumulus-950-100-hover"),
                            ("#9FC3FC", "blue-cumulus-950-100-active"),
                            ("#3558A2", "blue-cumulus-sun-368-moon-732"),
                            ("#5982E0", "blue-cumulus-sun-368-moon-732-hover"),
                            ("#7996E6", "blue-cumulus-sun-368-moon-732-active"),
                            ("#DAE6FD", "blue-cumulus-925-125"),
                            ("#A9C8FB", "blue-cumulus-925-125-hover"),
                            ("#8AB8F9", "blue-cumulus-925-125-active"),
                            ("#417DC4", "blue-cumulus-main-526"),
                            ("#B6CFFB", "blue-cumulus-850-200"),
                            ("#FEF3FD", "purple-glycine-975-75"),
                            ("#FCD4F8", "purple-glycine-975-75-hover"),
                            ("#FABFF5", "purple-glycine-975-75-active"),
                            ("#FEE7FC", "purple-glycine-950-100"),
                            ("#FDC0F8", "purple-glycine-950-100-hover"),
                            ("#FCA8F6", "purple-glycine-950-100-active"),
                            ("#6E445A", "purple-glycine-sun-319-moon-630"),
                            ("#A66989", "purple-glycine-sun-319-moon-630-hover"),
                            ("#BB7F9E", "purple-glycine-sun-319-moon-630-active"),
                            ("#FDDBFA", "purple-glycine-925-125"),
                            ("#FBAFF5", "purple-glycine-925-125-hover"),
                            ("#FA96F2", "purple-glycine-925-125-active"),
                            ("#A558A0", "purple-glycine-main-494"),
                            ("#FBB8F6", "purple-glycine-850-200"),
                            ("#FEF4F2", "pink-macaron-975-75"),
                            ("#FCD8D0", "pink-macaron-975-75-hover"),
                            ("#FAC5B8", "pink-macaron-975-75-active"),
                            ("#FEE9E6", "pink-macaron-950-100"),
                            ("#FDC6BD", "pink-macaron-950-100-hover"),
                            ("#FCB0A2", "pink-macaron-950-100-active"),
                            ("#8D533E", "pink-macaron-sun-406-moon-833"),
                            ("#CA795C", "pink-macaron-sun-406-moon-833-hover"),
                            ("#E08E73", "pink-macaron-sun-406-moon-833-active"),
                            ("#FDDFDA", "pink-macaron-925-125"),
                            ("#FBB8AB", "pink-macaron-925-125-hover"),
                            ("#FAA18D", "pink-macaron-925-125-active"),
                            ("#E18B76", "pink-macaron-main-689"),
                            ("#FCC0B4", "pink-macaron-850-200"),
                            ("#FEF4F3", "pink-tuile-975-75"),
                            ("#FCD7D3", "pink-tuile-975-75-hover"),
                            ("#FAC4BE", "pink-tuile-975-75-active"),
                            ("#FEE9E7", "pink-tuile-950-100"),
                            ("#FDC6C0", "pink-tuile-950-100-hover"),
                            ("#FCB0A7", "pink-tuile-950-100-active"),
                            ("#A94645", "pink-tuile-sun-425-moon-750"),
                            ("#D5706F", "pink-tuile-sun-425-moon-750-hover"),
                            ("#DA8A89", "pink-tuile-sun-425-moon-750-active"),
                            ("#FDDFDB", "pink-tuile-925-125"),
                            ("#FBB8AD", "pink-tuile-925-125-hover"),
                            ("#FAA191", "pink-tuile-925-125-active"),
                            ("#CE614A", "pink-tuile-main-556"),
                            ("#FCBFB7", "pink-tuile-850-200"),
                            ("#FEF6E3", "yellow-tournesol-975-75"),
                            ("#FCE086", "yellow-tournesol-975-75-hover"),
                            ("#F5D24B", "yellow-tournesol-975-75-active"),
                            ("#FEECC2", "yellow-tournesol-950-100"),
                            ("#FBD335", "yellow-tournesol-950-100-hover"),
                            ("#E6C130", "yellow-tournesol-950-100-active"),
                            ("#716043", "yellow-tournesol-sun-407-moon-922"),
                            ("#A28A62", "yellow-tournesol-sun-407-moon-922-hover"),
                            ("#CAB300", "yellow-tournesol-sun-407-moon-922-active"),
                            ("#FDE39C", "yellow-tournesol-925-125"),
                            ("#E9C53B", "yellow-tournesol-925-125-hover"),
                            ("#D3B235", "yellow-tournesol-925-125-active"),
                            ("#C8AA39", "yellow-tournesol-main-731"),
                            ("#EFCB3A", "yellow-tournesol-850-200"),
                            ("#FEF5E8", "yellow-moutarde-975-75"),
                            ("#FCDCA3", "yellow-moutarde-975-75-hover"),
                            ("#FBCD64", "yellow-moutarde-975-75-active"),
                            ("#FEEBD0", "yellow-moutarde-950-100"),
                            ("#FDCD6D", "yellow-moutarde-950-100-hover"),
                            ("#F4BE30", "yellow-moutarde-950-100-active"),
                            ("#695240", "yellow-moutarde-sun-348-moon-860"),
                            ("#9B7B61", "yellow-moutarde-sun-348-moon-860-hover"),
                            ("#B58F72", "yellow-moutarde-sun-348-moon-860-active"),
                            ("#FDE2B5", "yellow-moutarde-925-125"),
                            ("#F6C43C", "yellow-moutarde-925-125-hover"),
                            ("#DFB135", "yellow-moutarde-925-125-active"),
                            ("#C3992A", "yellow-moutarde-main-679"),
                            ("#FCC63A", "yellow-moutarde-850-200"),
                            ("#FEF4F2", "orange-terre-battue-975-75"),
                            ("#FCD8D0", "orange-terre-battue-975-75-hover"),
                            ("#FAC5B8", "orange-terre-battue-975-75-active"),
                            ("#FEE9E5", "orange-terre-battue-950-100"),
                            ("#FDC6BA", "orange-terre-battue-950-100-hover"),
                            ("#FCB09E", "orange-terre-battue-950-100-active"),
                            ("#755348", "orange-terre-battue-sun-370-moon-672"),
                            ("#AB7B6B", "orange-terre-battue-sun-370-moon-672-hover"),
                            ("#C68F7D", "orange-terre-battue-sun-370-moon-672-active"),
                            ("#FDDFD8", "orange-terre-battue-925-125"),
                            ("#FBB8A5", "orange-terre-battue-925-125-hover"),
                            ("#FAA184", "orange-terre-battue-925-125-active"),
                            ("#E4794A", "orange-terre-battue-main-645"),
                            ("#FCC0B0", "orange-terre-battue-850-200"),
                            ("#FBF6ED", "brown-cafe-creme-975-75"),
                            ("#F2DEB6", "brown-cafe-creme-975-75-hover"),
                            ("#EACF91", "brown-cafe-creme-975-75-active"),
                            ("#F7ECDB", "brown-cafe-creme-950-100"),
                            ("#EDCE94", "brown-cafe-creme-950-100-hover"),
                            ("#DABD84", "brown-cafe-creme-950-100-active"),
                            ("#685C48", "brown-cafe-creme-sun-383-moon-885"),
                            ("#97866A", "brown-cafe-creme-sun-383-moon-885-hover"),
                            ("#AE9B7B", "brown-cafe-creme-sun-383-moon-885-active"),
                            ("#F4E3C7", "brown-cafe-creme-925-125"),
                            ("#E1C386", "brown-cafe-creme-925-125-hover"),
                            ("#CCB078", "brown-cafe-creme-925-125-active"),
                            ("#D1B781", "brown-cafe-creme-main-782"),
                            ("#E7CA8E", "brown-cafe-creme-850-200"),
                            ("#FBF5F2", "brown-caramel-975-75"),
                            ("#F1DBCF", "brown-caramel-975-75-hover"),
                            ("#ECC9B5", "brown-caramel-975-75-active"),
                            ("#F7EBE5", "brown-caramel-950-100"),
                            ("#ECCBB9", "brown-caramel-950-100-hover"),
                            ("#E6B79A", "brown-caramel-950-100-active"),
                            ("#845D48", "brown-caramel-sun-425-moon-901"),
                            ("#BB8568", "brown-caramel-sun-425-moon-901-hover"),
                            ("#D69978", "brown-caramel-sun-425-moon-901-active"),
                            ("#F3E2D9", "brown-caramel-925-125"),
                            ("#E7BEA6", "brown-caramel-925-125-hover"),
                            ("#E1A982", "brown-caramel-925-125-active"),
                            ("#C08C65", "brown-caramel-main-648"),
                            ("#EAC7B2", "brown-caramel-850-200"),
                            ("#FBF5F2", "brown-opera-975-75"),
                            ("#F1DBCF", "brown-opera-975-75-hover"),
                            ("#ECC9B5", "brown-opera-975-75-active"),
                            ("#F7ECE4", "brown-opera-950-100"),
                            ("#ECCDB3", "brown-opera-950-100-hover"),
                            ("#E6BA90", "brown-opera-950-100-active"),
                            ("#745B47", "brown-opera-sun-395-moon-820"),
                            ("#A78468", "brown-opera-sun-395-moon-820-hover"),
                            ("#C09979", "brown-opera-sun-395-moon-820-active"),
                            ("#F3E2D7", "brown-opera-925-125"),
                            ("#E7BFA0", "brown-opera-925-125-hover"),
                            ("#DEAA7E", "brown-opera-925-125-active"),
                            ("#BD987A", "brown-opera-main-680"),
                            ("#EAC7AD", "brown-opera-850-200"),
                            ("#F9F6F2", "beige-gris-galet-975-75"),
                            ("#EADECD", "beige-gris-galet-975-75-hover"),
                            ("#E1CEB1", "beige-gris-galet-975-75-active"),
                            ("#F3EDE5", "beige-gris-galet-950-100"),
                            ("#E1D0B5", "beige-gris-galet-950-100-hover"),
                            ("#D1BEA2", "beige-gris-galet-950-100-active"),
                            ("#6A6156", "beige-gris-galet-sun-407-moon-821"),
                            ("#988B7C", "beige-gris-galet-sun-407-moon-821-hover"),
                            ("#AFA08F", "beige-gris-galet-sun-407-moon-821-active"),
                            ("#EEE4D9", "beige-gris-galet-925-125"),
                            ("#DBC3A4", "beige-gris-galet-925-125-hover"),
                            ("#C6B094", "beige-gris-galet-925-125-active"),
                            ("#AEA397", "beige-gris-galet-main-702"),
                            ("#E0CAB0", "beige-gris-galet-850-200"),
                            ("#00001229", "shadow-color"),
                            ("#AEA397", "beige-gris-galet"),
                            ("#7996E6", "blue-cumulus-sun-368-active"),
                            ("#5982E0", "blue-cumulus-sun-368-hover"),
                            ("#3558A2", "blue-cumulus-sun-368"),
                            ("#417DC4", "blue-cumulus"),
                            ("#6B93F6", "blue-ecume-850-active"),
                            ("#8BA7F8", "blue-ecume-850-hover"),
                            ("#BFCCFB", "blue-ecume-850"),
                            ("#465F9D", "blue-ecume"),
                            ("#A1A1F8", "blue-france-850-hover"),
                            ("#CACAFB", "blue-france-850"),
                            ("#ADADF9", "blue-france-925-active"),
                            ("#C1C1FB", "blue-france-925-hover"),
                            ("#E3E3FD", "blue-france-925"),
                            ("#CECEFC", "blue-france-950-hover"),
                            ("#ECECFE", "blue-france-950"),
                            ("#DCDCFC", "blue-france-975-hover"),
                            ("#F5F5FE", "blue-france-975"),
                            ("#AEAEF9", "blue-france-main-525-active"),
                            ("#9898F8", "blue-france-main-525-hover"),
                            ("#000091", "blue-france-sun-113"),
                            ("#2323FF", "blue-france"),
                            ("#8B7954", "brown-cafe-creme-main-782-active"),
                            ("#A38E63", "brown-cafe-creme-main-782-hover"),
                            ("#D1B781", "brown-cafe-creme"),
                            ("#C08C65", "brown-caramel"),
                            ("#BD987A", "brown-opera"),
                            ("#009099", "green-archipel"),
                            ("#679E3B", "green-bourgeon-850-active"),
                            ("#77B645", "green-bourgeon-850-hover"),
                            ("#95E257", "green-bourgeon-850"),
                            ("#68A532", "green-bourgeon"),
                            ("#00A95F", "green-emeraude"),
                            ("#4F9D91", "green-menthe-850-active"),
                            ("#5BB5A7", "green-menthe-850-hover"),
                            ("#73E0CF", "green-menthe-850"),
                            ("#00E2CB", "green-menthe-main-548-active"),
                            ("#00C7B3", "green-menthe-main-548-hover"),
                            ("#62A9A2", "green-menthe-sun-373-active"),
                            ("#53918C", "green-menthe-sun-373-hover"),
                            ("#37635F", "green-menthe-sun-373"),
                            ("#009081", "green-menthe"),
                            ("#B7A73F", "green-tilleul-verveine"),
                            ("#161616", "grey-50"),
                            ("#3A3A3A", "grey-200"),
                            ("#666666", "grey-425"),
                            ("#CECECE", "grey-850"),
                            ("#DDDDDD", "grey-900"),
                            ("#E5E5E5", "grey-925"),
                            ("#EEEEEE", "grey-950"),
                            ("#F6F6F6", "grey-975"),
                            ("#0063CB", "info-425"),
                            ("#E5E5E5", "light-gray"),
                            ("#F4BFB1", "orange-terre-battue-main-645-active"),
                            ("#F1A892", "orange-terre-battue-main-645-hover"),
                            ("#E4794A", "orange-terre-battue"),
                            ("#E18B76", "pink-macaron"),
                            ("#FA7659", "pink-tuile-850-active"),
                            ("#FB907D", "pink-tuile-850-hover"),
                            ("#FCBFB7", "pink-tuile-850"),
                            ("#CE614A", "pink-tuile"),
                            ("#DB9CD6", "purple-glycine-main-494-active"),
                            ("#D282CD", "purple-glycine-main-494-hover"),
                            ("#A558A0", "purple-glycine"),
                            ("#EB4444", "red-500"),
                            ("#B18A26", "yellow-moutarde-850-active"),
                            ("#CB9F2D", "yellow-moutarde-850-hover"),
                            ("#FCC63A", "yellow-moutarde-850"),
                            ("#C3992A", "yellow-moutarde"),
                            ("#CAB300", "yellow-tournesol"),
                        ],
                        default="#C3992A",
                        image_field=None,
                        max_length=255,
                        null=True,
                        samples=None,
                    ),
                ),
                (
                    "fill",
                    models.BooleanField(
                        default=False,
                        help_text="Ce champ permet de configurer un groupe d'action pour que son icône dispose d'un fond plein plutôt qu'un fond ajouré.\nC'est ce qui est utilisé par exemple sur l'action réparer",
                        verbose_name="Remplissage du fond",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icône du badge à choisir dans le <a href='https://www.systeme-de-design.gouv.fr/elements-d-interface/fondamentaux-techniques/icones' rel='noopener' target='_blank'>DSFR</a>",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Action - Groupe d'action",
                "verbose_name_plural": "Action - Groupes d'action",
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("code__regex", "^[0-9a-z_]+$")),
                        name="groupe_action_code_format",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="CarteConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(unique=True)),
                (
                    "hide_legend",
                    models.BooleanField(
                        default=False,
                        help_text="Cocher cette case cache la légende affichée en bas à gauche de la carte en desktop et au dessus de celle-ci en mobile",
                        verbose_name="Cacher la légende",
                    ),
                ),
                (
                    "no_branding",
                    models.BooleanField(
                        default=False,
                        help_text="Supprime le logo dans l'entête de la carte ainsi que le bouton Infos. Ce mode est utilisé essentiellement pour la carte affichée dans l'assistant",
                        verbose_name="Supprimer le branding",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Le slug est utilisé pour générer l'url de carte, par exemple: https://quefairedemesobjets.fr/carte/<strong>cyclevia</strong><br>Le slug est utilisé pour le script avec l'attribut <code>data-slug</code>, par exemple : <br/><code>&lt;script src='https://quefairedemesobjets.ademe.fr/static/carte.js' data-slug='cyclevia'&gt;&lt;/script&gt;</code>",
                        unique=True,
                    ),
                ),
                (
                    "preview_title",
                    models.CharField(
                        blank=True,
                        help_text="Ce titre s'affiche avant que l'utilisateur n'ait fait une recherche dans la carte",
                        verbose_name="Titre de l'écran de prévisualisation",
                    ),
                ),
                (
                    "preview_content",
                    models.TextField(
                        blank=True,
                        help_text="Ce texte s'affiche avant que l'utilisateur n'ait fait une recherche dans la carte",
                        verbose_name="Contenu de l'écran de prévisualisation",
                    ),
                ),
                (
                    "groupe_action",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Seules les actions sélectionnées s'afficheront sur la carte\nSi le champ n'est pas renseigné il sera ignoré",
                        to="qfdmo.groupeaction",
                        verbose_name="Groupe d'actions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Carte sur mesure",
                "verbose_name_plural": "Cartes sur mesure",
            },
        ),
        migrations.AddField(
            model_name="action",
            name="groupe_action",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="actions",
                to="qfdmo.groupeaction",
            ),
        ),
        migrations.CreateModel(
            name="GroupeActionConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "icon",
                    models.FileField(
                        blank=True,
                        help_text="L'icône doit être au format SVG. ",
                        null=True,
                        upload_to="config/groupeaction/icones/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["svg"]
                            )
                        ],
                        verbose_name="Supplanter l'icône utilisée pour l'action",
                    ),
                ),
                (
                    "acteur_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="La configuration peut être limitée à un type d'acteur spécifique. Auquel cas il doit être indiqué ici.\nSi aucun type d'acteur n'est renseigné, cette configuration s'appliquera à tout type d'acteur.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.acteurtype",
                        verbose_name="Types d'acteur concernés par la configuration",
                    ),
                ),
                (
                    "carte_config",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groupe_action_configs",
                        to="qfdmo.carteconfig",
                    ),
                ),
                (
                    "groupe_action",
                    models.ForeignKey(
                        blank=True,
                        help_text="La configuration peut être limitée à un groupe d'action spécifique. Auquel cas il doit être indiqué ici.\nSi aucune action n'est renseignée, cette configuration s'appliquera à tout type d'acteur.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.groupeaction",
                        verbose_name="Groupe d'action",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="displayedacteurtemp",
            name="labels",
            field=models.ManyToManyField(
                through="qfdmo.ActeurLabelQualite", to="qfdmo.labelqualite"
            ),
        ),
        migrations.CreateModel(
            name="RevisionActeur",
            fields=[
                (
                    "cree_le",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                (
                    "modifie_le",
                    models.DateTimeField(
                        auto_now=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "identifiant_unique",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "adresse",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "adresse_complement",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "code_postal",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=10,
                    ),
                ),
                (
                    "ville",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=2048
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "nom_commercial",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "nom_officiel",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "siren",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=9,
                    ),
                ),
                (
                    "siret",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=14,
                    ),
                ),
                (
                    "siret_is_closed",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Indique si le SIRET est fermé ou non dans l'Annuaire Entreprises",
                        null=True,
                        verbose_name="SIRET fermé",
                    ),
                ),
                (
                    "identifiant_externe",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("ACTIF", "actif"),
                            ("INACTIF", "inactif"),
                            ("SUPPRIME", "supprimé"),
                        ],
                        db_default="ACTIF",
                        default="ACTIF",
                        max_length=255,
                    ),
                ),
                (
                    "naf_principal",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "commentaires",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "horaires_osm",
                    models.CharField(
                        blank=True,
                        db_default="",
                        default="",
                        validators=[qfdmo.models.acteur.validate_opening_hours],
                    ),
                ),
                (
                    "horaires_description",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "public_accueilli",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Particuliers et professionnels",
                                "Particuliers et professionnels",
                            ),
                            ("Professionnels", "Professionnels"),
                            ("Particuliers", "Particuliers"),
                            ("Aucun", "Aucun"),
                            ("", ""),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "reprise",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1 pour 0", "1 pour 0"),
                            ("1 pour 1", "1 pour 1"),
                            ("", ""),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "exclusivite_de_reprisereparation",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Exclusivité de reprise/réparation",
                    ),
                ),
                ("uniquement_sur_rdv", models.BooleanField(blank=True, null=True)),
                (
                    "parent_reason",
                    models.CharField(
                        blank=True,
                        db_default="",
                        default="",
                        help_text="Raison du rattachement au parent",
                        max_length=255,
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True,
                        db_default="",
                        default="",
                        max_length=254,
                        validators=[core.validators.EmptyEmailValidator()],
                    ),
                ),
                (
                    "acteur_services",
                    models.ManyToManyField(blank=True, to="qfdmo.acteurservice"),
                ),
                (
                    "acteur_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.acteurtype",
                    ),
                ),
                (
                    "action_principale",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="qfdmo.action",
                    ),
                ),
                ("labels", models.ManyToManyField(to="qfdmo.labelqualite")),
            ],
            options={
                "verbose_name": "ACTEUR de l'EC - CORRIGÉ",
                "verbose_name_plural": "ACTEURS de l'EC - CORRIGÉ",
            },
        ),
        migrations.CreateModel(
            name="RevisionActeurParent",
            fields=[],
            options={
                "verbose_name": "Parent",
                "verbose_name_plural": "Parents",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("qfdmo.revisionacteur",),
        ),
        migrations.CreateModel(
            name="Source",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("libelle", models.CharField(max_length=255)),
                (
                    "code",
                    models.CharField(
                        help_text="Ce champ est utilisé lors de l'import de données, il ne doit pas être mis à jour sous peine de casser l'import de données",
                        max_length=255,
                        unique=True,
                        validators=[qfdmo.validators.CodeValidator()],
                    ),
                ),
                ("afficher", models.BooleanField(default=True)),
                ("url", models.CharField(blank=True, max_length=2048, null=True)),
                (
                    "logo_file",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="logos",
                        validators=[qfdmo.models.acteur.validate_logo],
                    ),
                ),
                (
                    "licence",
                    models.CharField(
                        choices=[
                            ("OPEN_LICENSE", "Licence Ouverte"),
                            ("ODBL", "ODBL"),
                            ("CC_BY_NC_SA", "CC-BY-NC-SA"),
                            ("NO_LICENSE", "Pas de licence"),
                        ],
                        db_default="NO_LICENSE",
                        default="NO_LICENSE",
                    ),
                ),
            ],
            options={
                "verbose_name": "Source de données",
                "verbose_name_plural": "Sources de données",
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("code__regex", "^[0-9a-z_]+$")),
                        name="source_code_format",
                    )
                ],
            },
        ),
        migrations.AddField(
            model_name="revisionacteur",
            name="source",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="qfdmo.source",
            ),
        ),
        migrations.CreateModel(
            name="DisplayedActeurTempSource",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "acteur",
                    models.ForeignKey(
                        db_column="displayedacteur_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.displayedacteurtemp",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="source_id",
                        to="qfdmo.source",
                    ),
                ),
            ],
            options={
                "db_table": "qfdmo_displayedacteurtemp_sources",
            },
        ),
        migrations.AddField(
            model_name="displayedacteurtemp",
            name="source",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="qfdmo.source",
            ),
        ),
        migrations.AddField(
            model_name="displayedacteurtemp",
            name="sources",
            field=models.ManyToManyField(
                blank=True,
                related_name="displayed_acteur_temps",
                through="qfdmo.DisplayedActeurTempSource",
                to="qfdmo.source",
            ),
        ),
        migrations.CreateModel(
            name="DisplayedActeur",
            fields=[
                (
                    "cree_le",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                (
                    "modifie_le",
                    models.DateTimeField(
                        auto_now=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                ("nom", models.CharField(db_index=True, max_length=255)),
                (
                    "description",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "identifiant_unique",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "adresse",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "adresse_complement",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "code_postal",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=10,
                    ),
                ),
                (
                    "ville",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=2048
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, db_default="", default="", max_length=254
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "nom_commercial",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "nom_officiel",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "siren",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=9,
                    ),
                ),
                (
                    "siret",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=14,
                    ),
                ),
                (
                    "siret_is_closed",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Indique si le SIRET est fermé ou non dans l'Annuaire Entreprises",
                        null=True,
                        verbose_name="SIRET fermé",
                    ),
                ),
                (
                    "identifiant_externe",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("ACTIF", "actif"),
                            ("INACTIF", "inactif"),
                            ("SUPPRIME", "supprimé"),
                        ],
                        db_default="ACTIF",
                        default="ACTIF",
                        max_length=255,
                    ),
                ),
                (
                    "naf_principal",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "commentaires",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "horaires_osm",
                    models.CharField(
                        blank=True,
                        db_default="",
                        default="",
                        validators=[qfdmo.models.acteur.validate_opening_hours],
                    ),
                ),
                (
                    "horaires_description",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "public_accueilli",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Particuliers et professionnels",
                                "Particuliers et professionnels",
                            ),
                            ("Professionnels", "Professionnels"),
                            ("Particuliers", "Particuliers"),
                            ("Aucun", "Aucun"),
                            ("", ""),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "reprise",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1 pour 0", "1 pour 0"),
                            ("1 pour 1", "1 pour 1"),
                            ("", ""),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "exclusivite_de_reprisereparation",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Exclusivité de reprise/réparation",
                    ),
                ),
                ("uniquement_sur_rdv", models.BooleanField(blank=True, null=True)),
                (
                    "uuid",
                    models.CharField(
                        db_index=True,
                        default=qfdmo.models.acteur.generate_short_uuid,
                        editable=False,
                        max_length=255,
                    ),
                ),
                (
                    "acteur_services",
                    models.ManyToManyField(blank=True, to="qfdmo.acteurservice"),
                ),
                (
                    "acteur_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.acteurtype",
                    ),
                ),
                (
                    "action_principale",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="qfdmo.action",
                    ),
                ),
                ("labels", models.ManyToManyField(to="qfdmo.labelqualite")),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.source",
                    ),
                ),
                (
                    "sources",
                    models.ManyToManyField(
                        blank=True, related_name="displayed_acteurs", to="qfdmo.source"
                    ),
                ),
            ],
            options={
                "verbose_name": "ACTEUR de l'EC - AFFICHÉ",
                "verbose_name_plural": "ACTEURS de l'EC - AFFICHÉ",
            },
        ),
        migrations.AddField(
            model_name="carteconfig",
            name="source",
            field=models.ManyToManyField(
                blank=True,
                help_text="Seules les sources sélectionnées s'afficheront sur la carte\nSi le champ n'est pas renseigné il sera ignoré",
                to="qfdmo.source",
                verbose_name="Source(s)",
            ),
        ),
        migrations.CreateModel(
            name="Acteur",
            fields=[
                (
                    "cree_le",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                (
                    "modifie_le",
                    models.DateTimeField(
                        auto_now=True,
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                ("nom", models.CharField(db_index=True, max_length=255)),
                (
                    "description",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "identifiant_unique",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "adresse",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "adresse_complement",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "code_postal",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=10,
                    ),
                ),
                (
                    "ville",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=2048
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, db_default="", default="", max_length=254
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "nom_commercial",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "nom_officiel",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "siren",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=9,
                    ),
                ),
                (
                    "siret",
                    models.CharField(
                        blank=True,
                        db_default="",
                        db_index=True,
                        default="",
                        max_length=14,
                    ),
                ),
                (
                    "siret_is_closed",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Indique si le SIRET est fermé ou non dans l'Annuaire Entreprises",
                        null=True,
                        verbose_name="SIRET fermé",
                    ),
                ),
                (
                    "identifiant_externe",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("ACTIF", "actif"),
                            ("INACTIF", "inactif"),
                            ("SUPPRIME", "supprimé"),
                        ],
                        db_default="ACTIF",
                        default="ACTIF",
                        max_length=255,
                    ),
                ),
                (
                    "naf_principal",
                    models.CharField(
                        blank=True, db_default="", default="", max_length=255
                    ),
                ),
                (
                    "commentaires",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "horaires_osm",
                    models.CharField(
                        blank=True,
                        db_default="",
                        default="",
                        validators=[qfdmo.models.acteur.validate_opening_hours],
                    ),
                ),
                (
                    "horaires_description",
                    models.TextField(blank=True, db_default="", default=""),
                ),
                (
                    "public_accueilli",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Particuliers et professionnels",
                                "Particuliers et professionnels",
                            ),
                            ("Professionnels", "Professionnels"),
                            ("Particuliers", "Particuliers"),
                            ("Aucun", "Aucun"),
                            ("", ""),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "reprise",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1 pour 0", "1 pour 0"),
                            ("1 pour 1", "1 pour 1"),
                            ("", ""),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "exclusivite_de_reprisereparation",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Exclusivité de reprise/réparation",
                    ),
                ),
                ("uniquement_sur_rdv", models.BooleanField(blank=True, null=True)),
                (
                    "acteur_services",
                    models.ManyToManyField(blank=True, to="qfdmo.acteurservice"),
                ),
                (
                    "acteur_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.acteurtype",
                    ),
                ),
                (
                    "action_principale",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="qfdmo.action",
                    ),
                ),
                ("labels", models.ManyToManyField(to="qfdmo.labelqualite")),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.source",
                    ),
                ),
            ],
            options={
                "verbose_name": "ACTEUR de l'EC - IMPORTÉ",
                "verbose_name_plural": "ACTEURS de l'EC - IMPORTÉ",
            },
        ),
        migrations.CreateModel(
            name="SousCategorieObjet",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("libelle", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=255, unique=True)),
                ("afficher", models.BooleanField(default=True)),
                (
                    "afficher_carte",
                    models.BooleanField(
                        default=False,
                        help_text="afficher la carte LVAO dans les fiches produits “Que faire de mes objets et déchets” avec les identifiants indiqués au niveau de la sous-catégorie",
                        verbose_name="Afficher la carte dans l’assistant",
                    ),
                ),
                (
                    "categorie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.categorieobjet",
                    ),
                ),
                (
                    "qfdmd_produits",
                    models.ManyToManyField(
                        blank=True,
                        related_name="sous_categories",
                        to="qfdmd.produit",
                        verbose_name="Produits Que Faire De Mes Déchets & Objets",
                    ),
                ),
            ],
            options={
                "verbose_name": "Objet - Sous catégorie",
                "ordering": ["libelle"],
            },
        ),
        migrations.CreateModel(
            name="RevisionPropositionService",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "acteur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposition_services",
                        to="qfdmo.revisionacteur",
                    ),
                ),
                (
                    "action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qfdmo.action"
                    ),
                ),
                (
                    "sous_categories",
                    models.ManyToManyField(to="qfdmo.souscategorieobjet"),
                ),
            ],
            options={
                "verbose_name": "PROPOSITION DE SERVICE - CORRIGÉ",
                "verbose_name_plural": "PROPOSITIONS DE SERVICE - CORRIGÉ",
            },
        ),
        migrations.CreateModel(
            name="PropositionService",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "acteur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposition_services",
                        to="qfdmo.acteur",
                    ),
                ),
                (
                    "action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qfdmo.action"
                    ),
                ),
                (
                    "sous_categories",
                    models.ManyToManyField(to="qfdmo.souscategorieobjet"),
                ),
            ],
            options={
                "verbose_name": "PROPOSITION DE SERVICE - IMPORTÉ",
                "verbose_name_plural": "PROPOSITIONS DE SERVICE - IMPORTÉ",
            },
        ),
        migrations.CreateModel(
            name="Objet",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("libelle", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=255, unique=True)),
                (
                    "identifiant_qfdmod",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Identifiant QFDMD"
                    ),
                ),
                (
                    "sous_categorie",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="objets",
                        to="qfdmo.souscategorieobjet",
                    ),
                ),
            ],
            options={
                "verbose_name": "Objet - Objet",
            },
        ),
        migrations.CreateModel(
            name="DisplayedPropositionServiceTempSousCategorie",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "proposition_service",
                    models.ForeignKey(
                        db_column="displayedpropositionservice_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.displayedpropositionservicetemp",
                    ),
                ),
                (
                    "sous_categorie_objet",
                    models.ForeignKey(
                        db_column="souscategorieobjet_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qfdmo.souscategorieobjet",
                    ),
                ),
            ],
            options={
                "db_table": "qfdmo_displayedpropositionservicetemp_sous_categories",
            },
        ),
        migrations.AddField(
            model_name="displayedpropositionservicetemp",
            name="sous_categories",
            field=models.ManyToManyField(
                through="qfdmo.DisplayedPropositionServiceTempSousCategorie",
                to="qfdmo.souscategorieobjet",
            ),
        ),
        migrations.CreateModel(
            name="DisplayedPropositionService",
            fields=[
                ("id", models.CharField(primary_key=True, serialize=False)),
                (
                    "acteur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposition_services",
                        to="qfdmo.displayedacteur",
                    ),
                ),
                (
                    "action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qfdmo.action"
                    ),
                ),
                (
                    "sous_categories",
                    models.ManyToManyField(to="qfdmo.souscategorieobjet"),
                ),
            ],
            options={
                "verbose_name": "Proposition de service - AFFICHÉ",
                "verbose_name_plural": "Proposition de service - AFFICHÉ",
            },
        ),
        migrations.AddField(
            model_name="carteconfig",
            name="sous_categorie_objet",
            field=models.ManyToManyField(
                blank=True,
                help_text="Seules les objets sélectionnés s'afficheront sur la carte\nSi le champ n'est pas renseigné il sera ignoré",
                to="qfdmo.souscategorieobjet",
                verbose_name="Sous-catégories d'objets filtrés",
            ),
        ),
        migrations.AddConstraint(
            model_name="acteurservice",
            constraint=models.CheckConstraint(
                condition=models.Q(("code__regex", "^[0-9a-z_]+$")),
                name="acteur_service_code_format",
            ),
        ),
        migrations.AddConstraint(
            model_name="action",
            constraint=models.CheckConstraint(
                condition=models.Q(("code__regex", "^[0-9a-z_]+$")),
                name="action_code_format",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="groupeactionconfig",
            unique_together={("carte_config", "groupe_action", "acteur_type")},
        ),
        migrations.AddField(
            model_name="revisionacteur",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                help_text="RevisionActeur «chapeau» utilisé pour dédupliquer cet acteur",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="duplicats",
                to="qfdmo.revisionacteurparent",
                validators=[qfdmo.models.acteur.clean_parent],
                verbose_name="Dédupliqué par",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="displayedacteurtempsource",
            unique_together={("acteur_id", "source_id")},
        ),
        migrations.AddConstraint(
            model_name="acteur",
            constraint=models.UniqueConstraint(
                condition=models.Q(("statut", "ACTIF")),
                fields=("source_id", "identifiant_externe"),
                name="acteur_unique_by_source_and_external_id",
            ),
        ),
        migrations.AddConstraint(
            model_name="revisionpropositionservice",
            constraint=models.UniqueConstraint(
                fields=("acteur", "action"), name="rps_unique_by_revisionacteur"
            ),
        ),
        migrations.AddConstraint(
            model_name="propositionservice",
            constraint=models.UniqueConstraint(
                fields=("acteur", "action"), name="ps_unique_by_acteur"
            ),
        ),
    ]
