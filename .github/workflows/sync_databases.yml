name: "Sync prod > preprod"

on:
  workflow_dispatch:
  schedule:
  - cron: "0 0 * * SUN"

env:
  DUPLICATE_API_TOKEN: ${{ secrets.DUPLICATE_API_TOKEN }}
  PREPROD_APP: ${{ secrets.SCALINGO_PREPROD_APP }}
  S3_HOST: https://cellar-c2.services.clever-cloud.com
  S3_PREPROD_BUCKET: ${{ secrets.LVAO_S3_PREPROD_BUCKET }}
  S3_PRODUCTION_BUCKET: ${{ secrets.LVAO_S3_PRODUCTION_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.LVAO_S3_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.LVAO_S3_SECRET_KEY }}
  SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
  SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
  SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
  SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
  PREPROD_DB_WEBAPP_DSN: ${{ secrets.PREPROD_DB_WEBAPP_DSN }}

defaults:
  run:
    shell: bash

# Address actions/missing-workflow-permissions rule in
# code scanning alerts
permissions:
  contents: read

jobs:
  sync_prod_to_preprod:
    name: Sync production database to preprod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          cache: "pip"
      - name: Install uv
        uses:  astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e
      - uses: actions/cache@v4
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-dev-airflow-${{ hashFiles('uv.lock') }}
      - name: Install the project dependencies
        run: uv sync --only-dev
      - name: Install Scalingo CLI
        run: |
          curl -O https://cli-dl.scalingo.com/install && bash install
      - name: Login Scalingo CLI
        run: scalingo login --api-token "${DUPLICATE_API_TOKEN}"
      - name: Use CLI
        uses: scaleway/action-scw@be2696f261325a78354eda14988c80405f33e082
        with:
          save-config: true
          export-config: true
          version: v2.24.0
          access-key: ${{ env.SCW_ACCESS_KEY }}
          secret-key: ${{ env.SCW_SECRET_KEY }}
          default-project-id: ${{ env.SCW_DEFAULT_PROJECT_ID }}
          default-organization-id: ${{ env.SCW_DEFAULT_ORGANIZATION_ID }}
      - name: Restore DB from prod to preprod
        run: |
          DB_URL=${PREPROD_DB_WEBAPP_DSN} make -e db-restore-preprod
      - name: Execute migrations in one-off container
        run: |
          scalingo --app ${PREPROD_APP} run python manage.py migrate
      - name: Truncate the suggestions table
        run: |
          scalingo --app ${PREPROD_APP} run python manage.py reinitialize_suggestions
      - name: Create remote db server between webapp and warehouse
        run: |
          scalingo --app ${PREPROD_APP} run python manage.py create_remote_db_server

  sync_prod_to_preprod_s3:
    name: Copy Prod s3 bucket to Copy Preprod s3 bucket
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Install AWS CLI dependencies
        run: |
          pip install awscli
      - name: Push to S3 bucket preprod
        run: aws --endpoint-url ${{ env.S3_HOST }} s3 sync --delete --quiet ${{ env.S3_PRODUCTION_BUCKET }} ${{ env.S3_PREPROD_BUCKET }}
