name: "_Tests"

on:
  workflow_call:

defaults:
  run:
    shell: bash

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:15-3.3-alpine
        env:
          POSTGRES_USER: qfdmo
          POSTGRES_PASSWORD: qfdmo # pragma: allowlist secret
          POSTGRES_DB: qfdmo
        options: >-
          --health-cmd pg_isready
          --health-interval 1s
          --health-timeout 1s
          --health-retries 50
        ports:
          - 6543:5432

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: "pip"
          python-version: "3.12.1"
      - name: Install GIS Packages
        run: |
          sudo apt-get update
          sudo apt-get install gdal-bin
      - name: Install Dependencies
        run: pip install --require-hashes --no-deps -r airflow-requirements.txt -r requirements.txt -r dev-requirements.txt
      - name: Run unit tests
        run: pytest unit_tests
      - name: Run integration tests
        run: pytest integration_tests
      - name: Run data tests
        run: pytest dags_unit_tests
      - name: Check code formatting
        run: black --check --diff .
      - uses: chartboost/ruff-action@v1
      - name: Check for missing migrations
        run: python manage.py makemigrations --check --no-input --settings=core.test_settings
        env:
          SECRET_KEY: votre_blanquette_est_bonne # pragma: allowlist secret
          DATABASE_URL: "postgres://fakeusername:fakepassword@postgres:5432/database" # pragma: allowlist secret

  frontend_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"
          cache: "npm"
      - name: Build assets
        run: |
          npm ci
          npm run build
      - name: Check code formatting
        run: npm run lint
      - name: Run tests
        run: npm run test

  e2e:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:15-3.3-alpine
        env:
          POSTGRES_USER: qfdmo
          POSTGRES_PASSWORD: qfdmo # pragma: allowlist secret
          POSTGRES_DB: qfdmo
        options: >-
          --health-cmd pg_isready
          --health-interval 1s
          --health-timeout 1s
          --health-retries 50
        ports:
          - 6543:5432
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"
          cache: "npm"

      - name: Build assets
        run: |
          npm ci
          npm run build

      - uses: actions/setup-python@v5
        with:
          cache: "pip"
          python-version: "3.12.1"

      - name: Install GIS Packages
        run: |
          sudo apt-get update
          sudo apt-get install gdal-bin

      - name: Install Dependencies
        run: pip install --require-hashes --no-deps -r requirements.txt -r dev-requirements.txt

      - name: Set env variables
        run: cp .env.template .env

      - name: Migrate database
        run: |
          python manage.py createcachetable
          python manage.py migrate

      - name: Populate database
        run: |
          python manage.py loaddata actions acteur_services acteur_types categories objets

      - name: Run serveur
        run: |
          python manage.py runserver &

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --reporter=list --update-snapshots

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
